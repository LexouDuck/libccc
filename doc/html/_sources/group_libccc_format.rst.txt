.. index:: pair: group; 09) libccc/format
.. _doxid-group__libccc__format:

09) libccc/format
=================

.. toctree::
	:hidden:

Overview
~~~~~~~~

This header defines printf-style functions, and their format specifiers :ref:`More...<details-group__libccc__format>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// global functions

	char* :ref:`String_Format<doxid-group__libccc__format_1gadf160b12fd5cae7c89c1bd479915a567>`(char const* format, ...);
	char* :ref:`String_Format_VA<doxid-group__libccc__format_1gaf7d93261780a050dcd23f7a2daa9605f>`(char const* format, va_list args);
	:ref:`t_size<doxid-group__libccc__pointer_1gab26ea4b5e8504781be1c368c28967472>` :ref:`String_Format_N<doxid-group__libccc__format_1ga3abe57038d3f158a3f276a0a3fd419cc>`(char* dest, :ref:`t_size<doxid-group__libccc__pointer_1gab26ea4b5e8504781be1c368c28967472>` max, char const* format, ...);
	:ref:`t_size<doxid-group__libccc__pointer_1gab26ea4b5e8504781be1c368c28967472>` :ref:`String_Format_N_VA<doxid-group__libccc__format_1ga896c9773cc5364d772b581b483ca50d2>`(char* dest, :ref:`t_size<doxid-group__libccc__pointer_1gab26ea4b5e8504781be1c368c28967472>` max, char const* format, va_list args);

	// macros

	#define :target:`FORMAT_BOOL<doxid-group__libccc__format_1gaee2f5d3944602902fbcbe2bea3fece0a>`
	#define :target:`FORMAT_CHAR<doxid-group__libccc__format_1gaeb7fb1d98bb972105415bef946116d47>`
	#define :target:`FORMAT_COLOR_AHSL<doxid-group__libccc__format_1ga14a3b85388b363ae341071b27cf1f253>`
	#define :target:`FORMAT_COLOR_ARGB<doxid-group__libccc__format_1gafdc0dd379b9b80255fa3850a252b7daa>`
	#define :target:`FORMAT_COLOR_ARGB16<doxid-group__libccc__format_1ga807accc808674bb5f891de340336704f>`
	#define :target:`FORMAT_COLOR_ARGB32<doxid-group__libccc__format_1ga5676be33f027735518b0c03f7172e174>`
	#define :target:`FORMAT_COMPLEX<doxid-group__libccc__format_1ga7c7d6af8ebe5280c04f4ee599af99c3b>`
	#define :target:`FORMAT_ENUM<doxid-group__libccc__format_1ga3d500b57fa4cda7566e9f9124b1204c6>`
	#define :target:`FORMAT_F128<doxid-group__libccc__format_1ga3c94d2da78fd0ab9a170654004555bd4>`
	#define :target:`FORMAT_F32<doxid-group__libccc__format_1ga0cd3f60243b366a1084f5ca646f22c0c>`
	#define :target:`FORMAT_F64<doxid-group__libccc__format_1ga536a1f764edcd65f25a2a0ff6e4bb6c4>`
	#define :target:`FORMAT_F80<doxid-group__libccc__format_1gaa3df22e1af3ff8115185476feeabf070>`
	#define :target:`FORMAT_FIXED<doxid-group__libccc__format_1ga44835dd4c169e13e0fedf8c01a54dc2b>`
	#define :target:`FORMAT_FLOAT<doxid-group__libccc__format_1gaae35e37553374231d6b49b2479676c39>`
	#define :target:`FORMAT_HEX_F128<doxid-group__libccc__format_1ga6204a774bb4601796411ef75b38900b2>`
	#define :target:`FORMAT_HEX_F32<doxid-group__libccc__format_1ga00fea1eb07bd520ab7c6cfb372922d9c>`
	#define :target:`FORMAT_HEX_F64<doxid-group__libccc__format_1gac3219ccb9d68a8a885ac8ed443ec4ba9>`
	#define :target:`FORMAT_HEX_F80<doxid-group__libccc__format_1gabb9d7acd996ccc0d44c782e20227af31>`
	#define :target:`FORMAT_HEX_FIXED<doxid-group__libccc__format_1gac1c9db6f513efa8f46fae44b373dc415>`
	#define :target:`FORMAT_HEX_FLOAT<doxid-group__libccc__format_1gaef3e295370f879e0bc559e78031572e7>`
	#define :target:`FORMAT_HEX_PTRDIFF<doxid-group__libccc__format_1ga193dd412a718ef9697dabe5209ddb653>`
	#define :target:`FORMAT_HEX_Q128<doxid-group__libccc__format_1ga2bb65051fa50d868aa53e2daef31fc52>`
	#define :target:`FORMAT_HEX_Q16<doxid-group__libccc__format_1ga4bbd72cd87e774a74da8680064fe8aa6>`
	#define :target:`FORMAT_HEX_Q32<doxid-group__libccc__format_1ga14804a3e7e1fb48524fd701a35d26c58>`
	#define :target:`FORMAT_HEX_Q64<doxid-group__libccc__format_1ga3b06bca3389f659f40ca6be4d2728cc6>`
	#define :target:`FORMAT_HEX_SIZE<doxid-group__libccc__format_1gaba47fd2636fbbd091a01b8fba9e75550>`
	#define :target:`FORMAT_HEX_U128<doxid-group__libccc__format_1ga775047454247b68c0d68daa3c1159724>`
	#define :target:`FORMAT_HEX_U16<doxid-group__libccc__format_1ga27696a736ba9e07f3417def6b38d7298>`
	#define :target:`FORMAT_HEX_U32<doxid-group__libccc__format_1gaab8c3339edb2fe2ffc93e3dd63747693>`
	#define :target:`FORMAT_HEX_U64<doxid-group__libccc__format_1gaa0172cbbe190a1bf94a3b0a85d09f637>`
	#define :target:`FORMAT_HEX_U8<doxid-group__libccc__format_1ga532c4a2b9d9fbe6f08f21c5c29862a02>`
	#define :target:`FORMAT_HEX_UINT<doxid-group__libccc__format_1ga0d296dd08c3d0e187b4cb500ee5ef926>`
	#define :target:`FORMAT_MATRIX<doxid-group__libccc__format_1gabd4220a182555accc21a178da5d403bd>`
	#define :target:`FORMAT_MATRIX2D<doxid-group__libccc__format_1ga1d76841c24700dc87f56bb281e1ae251>`
	#define :target:`FORMAT_MATRIX3D<doxid-group__libccc__format_1ga1bc5c60800d90596fd1b45838dd6d4bc>`
	#define :target:`FORMAT_MATRIX4D<doxid-group__libccc__format_1gabbdd1a2c2ddb05845b70e057fba69927>`
	#define :target:`FORMAT_MEM<doxid-group__libccc__format_1gaaa5c1619e5eef5e0f5f8a9500e879ba5>`(N)
	#define :target:`FORMAT_MEMORY<doxid-group__libccc__format_1ga0d1a4c874505ebe25754e90e85a0167e>`(N)
	#define :target:`FORMAT_POINTER<doxid-group__libccc__format_1gae3251e8695cd25e22c1d411c23beb517>`
	#define :target:`FORMAT_PTR<doxid-group__libccc__format_1ga79e1cb5aeb47eb6b263191e523397310>`
	#define :target:`FORMAT_PTRDIFF<doxid-group__libccc__format_1ga506a47a75ba0783cbe1acbec9dc32f9a>`
	#define :target:`FORMAT_Q128<doxid-group__libccc__format_1ga8482f621873c259234232001d6b856a5>`
	#define :target:`FORMAT_Q16<doxid-group__libccc__format_1ga1b4e4a814d865b91d7268c32f683d75b>`
	#define :target:`FORMAT_Q32<doxid-group__libccc__format_1gad84e579a13e9e7f813000ac688aa4553>`
	#define :target:`FORMAT_Q64<doxid-group__libccc__format_1ga16f5cb7c0dd7c24bd6f1387743687849>`
	#define :target:`FORMAT_S128<doxid-group__libccc__format_1ga5aa7c4736db9ecc777a3548a91f80393>`
	#define :target:`FORMAT_S16<doxid-group__libccc__format_1ga646c169ddd964da735909db40403ca26>`
	#define :target:`FORMAT_S32<doxid-group__libccc__format_1ga07fb0c583d3ee2c4b5dc8479767299b0>`
	#define :target:`FORMAT_S64<doxid-group__libccc__format_1ga3d5d95f845c796cca7fd426dcad6a717>`
	#define :target:`FORMAT_S8<doxid-group__libccc__format_1ga353099bc6a28ee7955f051721cf3a68a>`
	#define :target:`FORMAT_SINT<doxid-group__libccc__format_1ga2c31b722749c03ffef3c2380b2a45e4a>`
	#define :target:`FORMAT_SINTMAX<doxid-group__libccc__format_1gaf542e5f0495a9f386acd5669e77e7a34>`
	#define :target:`FORMAT_SINTPTR<doxid-group__libccc__format_1ga6318ea5c750c4ce5d16223cfe41976f1>`
	#define :target:`FORMAT_SIZE<doxid-group__libccc__format_1gabb14717b3277a06062b06fc2eb583003>`
	#define :target:`FORMAT_STR<doxid-group__libccc__format_1gacd0eb5cab66474fbb9c165a805899f62>`
	#define :target:`FORMAT_STRING<doxid-group__libccc__format_1ga4610636f10e4604ba296cbf9287b0c7b>`
	#define :target:`FORMAT_U128<doxid-group__libccc__format_1gad0c083b21ebe6d3ac1c69f4d2c1dcb25>`
	#define :target:`FORMAT_U16<doxid-group__libccc__format_1ga2c915edcba02718b255507b55076dbda>`
	#define :target:`FORMAT_U32<doxid-group__libccc__format_1ga79b8385f26da7774d0af1586578938fe>`
	#define :target:`FORMAT_U64<doxid-group__libccc__format_1ga9036b82bf27d893ea08671cf85505a75>`
	#define :target:`FORMAT_U8<doxid-group__libccc__format_1ga5f6da01e1e55d1ca33bd8fac0ad04cbb>`
	#define :target:`FORMAT_UINT<doxid-group__libccc__format_1ga434838e08ef1a8e5ea98f02b5b8b8cf9>`
	#define :target:`FORMAT_UINTMAX<doxid-group__libccc__format_1ga7b2272edc0da69eddaddfa9b1eb7d94d>`
	#define :target:`FORMAT_UINTPTR<doxid-group__libccc__format_1gae8b263e3846be7f941541c04dc59689b>`
	#define :target:`FORMAT_UTF8<doxid-group__libccc__format_1ga00c40467a947be89d1e25a3b005e9e3d>`
	#define :target:`FORMAT_VECTOR<doxid-group__libccc__format_1gae5bb607cb4845f64b1a350d2c458b2c9>`
	#define :target:`FORMAT_VECTOR2D<doxid-group__libccc__format_1ga24f540b4d99ad1319635b70c6afe2cb8>`
	#define :target:`FORMAT_VECTOR3D<doxid-group__libccc__format_1ga01c36c5363622ae3556d6bae0213ed31>`
	#define :target:`FORMAT_VECTOR4D<doxid-group__libccc__format_1ga3f0c78552afb88f7a412852cf61b03a6>`
	#define :target:`String_Build<doxid-group__libccc__format_1gacc97b00fd8f86c2e590b7fc53b9ebf21>`
	#define :target:`String_Build_N<doxid-group__libccc__format_1gade57a00d12aac06b9768603513a10410>`
	#define :target:`String_Build_N_VA<doxid-group__libccc__format_1ga0b927e0f29d106ed722ce8d7fd61b7c9>`
	#define :target:`String_Build_VA<doxid-group__libccc__format_1ga164c8fcd4f8b160918efd724f7370683>`
	#define :target:`c_asprintf<doxid-group__libccc__format_1gafae038f477a52abad1c3db5215bf9d50>`
	#define :target:`c_snprintf<doxid-group__libccc__format_1gab0a5026241da51c0a778c47aafcce5d8>`
	#define :target:`c_strfmt<doxid-group__libccc__format_1ga547b820d07e6b57ec93c4069217656b5>`
	#define :target:`c_strformat<doxid-group__libccc__format_1gaec22df63b1874a7497781018cbf878ed>`
	#define :target:`c_strnfmt<doxid-group__libccc__format_1gabe340a7004bdbe20915ebe92a4192c42>`
	#define :target:`c_strnfmt_va<doxid-group__libccc__format_1gacad3650aa3c96b0300609c2365b6fab0>`
	#define :target:`c_strnformat<doxid-group__libccc__format_1ga339619f37269bf313930b607d2eb086b>`
	#define :target:`c_strnformat_va<doxid-group__libccc__format_1gaeeb1d520f3a7545291703c4c55fd75e8>`
	#define :target:`c_vasprintf<doxid-group__libccc__format_1gad3ebb60ff16369cd2d55992a39b1cd9d>`
	#define :target:`c_vsnprintf<doxid-group__libccc__format_1ga87a6991aa4af588a65550ca5675fd385>`
	#define :target:`s_strfmt_va<doxid-group__libccc__format_1ga22d228a9cf511661fffee27674557231>`
	#define :target:`s_strformat_va<doxid-group__libccc__format_1gacbf9624e5a69b2303e93ff0fc957ceb8>`

.. _details-group__libccc__format:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This header defines printf-style functions, and their format specifiers

Global Functions
----------------

.. index:: pair: function; String_Format
.. _doxid-group__libccc__format_1gadf160b12fd5cae7c89c1bd479915a567:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* String_Format(char const* format, ...)

Constructs a string from the given ``format`` string and multiple args (equivalent to ``asprintf()``)

Constructs a new null-terminated string, which is generated from the given ``format`` string, as well as any relevant variadic arguments - it is equivalent to the ``asprintf()`` function.

The ``format`` string may contain format specifiers (ie: a '' followed by certain chars) A format specifier has the following syntax (items between brackets are optional):

``%[flags][minsize][.precision][bitsize]char``.\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\_ \| char \| Output \| Example \| \|\__\__\__\_\|\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\_\|\__\__\__\__\__\_\| \| d, i \| Signed decimal integer \| 392 \| u \| Unsigned decimal integer \| 7235 \| o \| Unsigned octal \| 610 \| x \| Unsigned hexadecimal integer \| 7fa \| X \| Unsigned hexadecimal integer (uppercase) \| 7FA \| f \| Decimal floating point, lowercase \| 392.65 \| F \| Decimal floating point, uppercase \| 392.65 \| e \| Scientific notation float, lowercase \| 3.9265e+2 \| E \| Scientific notation float, uppercase \| 3.9265E+2 \| g \| Use the shortest representation: e or f \| 392.65 \| G \| Use the shortest representation: E or F \| 392.65 \| a \| Hexadecimal floating point, lowercase \| -0xc.90fep-2 \| A \| Hexadecimal floating point, uppercase \| -0XC.90FEP-2 \| c \| Character \| a \| s \| String of characters \| example \| p \| Pointer address \| b8000000 \| % \| A "%%" specifier will write a single '' \| % \| n \| Nothing printed: the corresponding argument must be a pointer to a signed int. \|\__\__\__\_\| The number of characters written so far is stored in the pointed location.

.\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\_ \| flags \| Description \| \|\__\__\__\_\|\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\_\| \| + \| Precede the result with a plus '+' or minus '-' sign, even for positive/unsigned numbers. \| \|\__\__\__\_\|_By default, only negative numbers are preceded with a minus '-' sign.\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\_\| \| # \| With o,x,X: the value is preceeded with 0, 0x or 0X respectively, for values different than zero. \| \|\__\__\__\_\|_With a,A,e,E,f,F,g,G: forces the written output to contain a decimal point, even if no more digits follow.\| \|(space)\| If no sign is going to be written, a blank space is inserted before the value. \| \|\__\__\__\_\|\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\_\| .\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\_ \| minsize \| is a number (so, decimal numerical digit chars). \| \|\__\__\__\__\__\_\|\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\_\| \| Minimum number of characters to be printed. \| The value is not truncated, even if the result is larger. \| If the value is shorter than this number, the result is padded with blank spaces. .\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\_ \| precision \| is a number (so, decimal numerical digit chars), preceded by a '.' period. \| \|\__\__\__\__\__\_\|\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\_\| \| With a,A,e,E,f,F: the number of digits to be printed after the decimal point (by default, this is 6). \| With g,G: the maximum number of significant digits to be printed for the mantissa. \| With s: this is the maximum number of characters to be printed (by default, all characters are printed until the '\0' null terminator). \| If the period is specified without an explicit value for precision, 0 is assumed. .\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\__\_ \|bitsize\| d, i \| u, o, x, X \|f,F,e,E,g,G,a,A\| c \| s \| p \| n \| \|\__\__\__\_\|\__\__\__\__\__\__\__\_\|\__\__\__\__\__\__\__\__\__\__\__\_\|\__\__\__\__\__\__\__\_\|\__\__\__\_\|\__\__\__\__\__\_\|\__\__\__\_\|\__\__\__\__\__\__\__\_\| \|(none) \| int \| unsigned int \| double \| int \| char\* \| void\* \| int\* \| \| hh \| signed char \| unsigned char \| \| \| \| \| signed char\* \| \| h \| short int \| unsigned short int \| \| \| \| \| short int\* \| \| l \| long int \| unsigned long int \| \|wint_t \| wchar_t\* \| \| long int\* \| \| ll \| long long int \| unsigned long long int\| \| \| \| \| long long int\*\| \| j \| intmax_t \| uintmax_t \| \| \| \| \| intmax_t\* \| \| z \| size_t \| size_t \| \| \| \| \| size_t\* \| \| t \| ptrdiff_t \| ptrdiff_t \| \| \| \| \| ptrdiff_t\* \| \|\__L\__\__\|\__\__\__\__\__\__\__\_\|\__\__\__\__\__\__\__\__\__\__\__\_\|_long_double\__\_\|\__\__\__\_\|\__\__\__\__\__\_\|\__\__\__\_\|\__\__\__\__\__\__\__\_\|

.. index:: pair: function; String_Format_VA
.. _doxid-group__libccc__format_1gaf7d93261780a050dcd23f7a2daa9605f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* String_Format_VA(char const* format, va_list args)



.. rubric:: See also:

:ref:`String_Format <doxid-group__libccc__format_1gadf160b12fd5cae7c89c1bd479915a567>`

.. index:: pair: function; String_Format_N
.. _doxid-group__libccc__format_1ga3abe57038d3f158a3f276a0a3fd419cc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_size<doxid-group__libccc__pointer_1gab26ea4b5e8504781be1c368c28967472>` String_Format_N(char* dest, :ref:`t_size<doxid-group__libccc__pointer_1gab26ea4b5e8504781be1c368c28967472>` max, char const* format, ...)

Constructs a string from the given ``format`` string and multiple args, writing at most ``max`` chars into ``dest`` (equivalent to ``snprintf()``)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- dest

		- The destination buffer, in which to write the resulting string (if ``NULL``, does not write anything and simply returns the length)

	*
		- max

		- The maximum amount of characters to write to ``dest``, including the '\0' null terminator

	*
		- format

		- The format string used to construct the resulting date string: learn more here `https://www.cplusplus.com/reference/cstdio/printf/ <https://www.cplusplus.com/reference/cstdio/printf/>`__



.. rubric:: Returns:

the amount of characters in the constructed format string, regardless of ``max`` size

.. index:: pair: function; String_Format_N_VA
.. _doxid-group__libccc__format_1ga896c9773cc5364d772b581b483ca50d2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_size<doxid-group__libccc__pointer_1gab26ea4b5e8504781be1c368c28967472>` String_Format_N_VA(char* dest, :ref:`t_size<doxid-group__libccc__pointer_1gab26ea4b5e8504781be1c368c28967472>` max, char const* format, va_list args)



.. rubric:: See also:

:ref:`String_Format_N <doxid-group__libccc__format_1ga3abe57038d3f158a3f276a0a3fd419cc>`

