.. index:: pair: group; 00) libccc
.. _doxid-group__libccc:

00) libccc
==========

.. toctree::
	:hidden:

Overview
~~~~~~~~

This file is simply meant to include all the primitive types together. :ref:`More...<details-group__libccc>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// macros

	#define :ref:`CONCAT<doxid-group__libccc_1gae7be8d94ef3433b06c349d722941d3b0>`(TOKEN1, TOKEN2)
	#define :target:`CONCAT_<doxid-group__libccc_1gadb10c29a9da48c842c88c208f731ea66>`(TOKEN1, TOKEN2)
	#define :ref:`ERROR<doxid-group__libccc_1ga8fe83ac76edc595f6b98cd4a4127aed5>`
	#define :ref:`HUNGARIAN_ENUM<doxid-group__libccc_1ga58990bff0dc5971dbfa1baeb2a5de57c>`
	#define :ref:`HUNGARIAN_FUNCTION<doxid-group__libccc_1ga7692350364cf399c014ef369fb846397>`
	#define :ref:`HUNGARIAN_PRIMITIVE<doxid-group__libccc_1ga18c31071065cc09d74764cd99bc34a4e>`
	#define :ref:`HUNGARIAN_STRUCT<doxid-group__libccc_1gaaeed2faba04f0354fd8f01296e46a342>`
	#define :ref:`HUNGARIAN_UNION<doxid-group__libccc_1ga49e29c9d235b230d591e6a89b180b103>`
	#define :ref:`INCBIN<doxid-group__libccc_1ga73431ba9d27af74793901561ae448116>`(_NAME, _FILEPATH)
	#define :ref:`LIBCONFIG_BITS_FIXED<doxid-group__libccc_1gaa5d56c2abf4a218f7a150dbab66ef199>`
	#define :ref:`LIBCONFIG_BITS_FLOAT<doxid-group__libccc_1gae831a75f400b727ef8cb54fec109ca28>`
	#define :ref:`LIBCONFIG_BITS_SINT<doxid-group__libccc_1gaac372d149c7d1452ad8f81414a6c75ab>`
	#define :ref:`LIBCONFIG_BITS_UINT<doxid-group__libccc_1ga86d00a69dfe2e664c87a03499d7b5f5a>`
	#define :ref:`LIBCONFIG_HANDLE_NULLPOINTERS<doxid-group__libccc_1ga97f207da9392f6cba9c7946bb7697a70>`
	#define :ref:`LIBCONFIG_LIST_DOUBLYLINKED<doxid-group__libccc_1ga2dbec267fbf6efd24e1efc6d21d1ff68>`
	#define :ref:`LIBCONFIG_LIST_NAME<doxid-group__libccc_1ga6bfbca501d2dc404b4702e129ca7e127>`
	#define :ref:`LIBCONFIG_LIST_TYPE<doxid-group__libccc_1ga4a770b9d67958d3ffe84c94afb4d0942>`
	#define :ref:`LIBCONFIG_NAMINGSTYLE_TYPES<doxid-group__libccc_1ga8ef160b822ec74fd6c6455647386e506>`
	#define :target:`LIBCONFIG_TYPENAME_AABB<doxid-group__libccc_1gae023cdd13b4fa3d321ed5e56ce2be093>`
	#define :target:`LIBCONFIG_TYPENAME_ARRAY<doxid-group__libccc_1ga40f9893522ff63314e1fa54ed90f8a05>`
	#define :target:`LIBCONFIG_TYPENAME_BOOL<doxid-group__libccc_1ga9d3ccaca9a71d022917881fef2311575>`
	#define :target:`LIBCONFIG_TYPENAME_CHAR<doxid-group__libccc_1gaab8cc588f2e188402b2802eba8dd3af9>`
	#define :target:`LIBCONFIG_TYPENAME_COLOR_HSL<doxid-group__libccc_1ga99aa73efaff1aa21a28d39f1edb55671>`
	#define :target:`LIBCONFIG_TYPENAME_COLOR_RGB<doxid-group__libccc_1ga891fc15a31798451083f374b9328a381>`
	#define :target:`LIBCONFIG_TYPENAME_COMPLEX<doxid-group__libccc_1gac1acaf44a9aca39f51131ad4fcd495a4>`
	#define :target:`LIBCONFIG_TYPENAME_DICT<doxid-group__libccc_1ga69e740d4768cfb48e131a0eceacbb003>`
	#define :target:`LIBCONFIG_TYPENAME_FIXED<doxid-group__libccc_1ga56a62a248007cbd3341f62e56b1dcc66>`
	#define :target:`LIBCONFIG_TYPENAME_FIXED_128<doxid-group__libccc_1ga412a1d4911c004bfcd2f77c035313c58>`
	#define :target:`LIBCONFIG_TYPENAME_FIXED_16<doxid-group__libccc_1ga88ab492e88bd82d548b64976293fe82e>`
	#define :target:`LIBCONFIG_TYPENAME_FIXED_32<doxid-group__libccc_1ga9848a67600653ab1878f39c06b7f515e>`
	#define :target:`LIBCONFIG_TYPENAME_FIXED_64<doxid-group__libccc_1gab0d1dbefdf7d13edffcf4f5e37563670>`
	#define :target:`LIBCONFIG_TYPENAME_FLOAT<doxid-group__libccc_1ga13b28809428fea17c574f87e3816fa58>`
	#define :target:`LIBCONFIG_TYPENAME_FLOAT_128<doxid-group__libccc_1ga752ec73c2086d34e394f6650ac48851c>`
	#define :target:`LIBCONFIG_TYPENAME_FLOAT_32<doxid-group__libccc_1gac36c2faa9edf829cf5b280827677b8f8>`
	#define :target:`LIBCONFIG_TYPENAME_FLOAT_64<doxid-group__libccc_1gaa4e703ad3cd71832af1aef8a345831d6>`
	#define :target:`LIBCONFIG_TYPENAME_FLOAT_80<doxid-group__libccc_1ga23790d244c1199b4bc0bb9eade34fe00>`
	#define :target:`LIBCONFIG_TYPENAME_INTERVAL<doxid-group__libccc_1ga38074960f0523597ae189c945eb154fe>`
	#define :target:`LIBCONFIG_TYPENAME_IO_ERROR<doxid-group__libccc_1ga1569509f37145370191080a3c8a1b3f5>`
	#define :target:`LIBCONFIG_TYPENAME_IO_FILEDESC<doxid-group__libccc_1gaffea4bde7b07a5d3889b693906c2037d>`
	#define :target:`LIBCONFIG_TYPENAME_IO_MODE<doxid-group__libccc_1gaa3c011b7500b4da80d37117dbd90b17d>`
	#define :target:`LIBCONFIG_TYPENAME_IO_OPEN<doxid-group__libccc_1ga2e9030cb692491cfe4ec76fd663285bb>`
	#define :target:`LIBCONFIG_TYPENAME_KEYVAL<doxid-group__libccc_1gaedbf101c5d538be39cb246c241b55495>`
	#define :target:`LIBCONFIG_TYPENAME_LEAF<doxid-group__libccc_1ga938f5e4048a13cc191283f51dd042e5c>`
	#define :target:`LIBCONFIG_TYPENAME_LIST<doxid-group__libccc_1ga4928a8dbae11efe6369a313e552d1d65>`
	#define :target:`LIBCONFIG_TYPENAME_MATRIX<doxid-group__libccc_1ga1547683c016ea659afadb58423c72984>`
	#define :target:`LIBCONFIG_TYPENAME_MATRIX2D<doxid-group__libccc_1ga57695f8100490f2393e8e4af634795cc>`
	#define :target:`LIBCONFIG_TYPENAME_MATRIX3D<doxid-group__libccc_1gacdd7c367750651fa11a3855184fb8f1e>`
	#define :target:`LIBCONFIG_TYPENAME_MATRIX4D<doxid-group__libccc_1gac6ee7f156fb1da406894d4bab0bf5de9>`
	#define :target:`LIBCONFIG_TYPENAME_OBJECT<doxid-group__libccc_1gac78a6b5531a0582ba85b08419361377e>`
	#define :target:`LIBCONFIG_TYPENAME_PTRDIFF<doxid-group__libccc_1gaf853fe4ebfd3d5751c0e427867b783e1>`
	#define :target:`LIBCONFIG_TYPENAME_QUATERNION<doxid-group__libccc_1ga9fbffd44f0f2f3642ec011d733990d0b>`
	#define :target:`LIBCONFIG_TYPENAME_SINT<doxid-group__libccc_1ga4287c44b179572de6fa193cdf4c7ad65>`
	#define :target:`LIBCONFIG_TYPENAME_SINTMAX<doxid-group__libccc_1ga56f79996824a321b410d0f54626d51c5>`
	#define :target:`LIBCONFIG_TYPENAME_SINTPTR<doxid-group__libccc_1ga3ff28e718887659d888deb8f4dfd4571>`
	#define :target:`LIBCONFIG_TYPENAME_SINT_128<doxid-group__libccc_1gac7b05dfee2d1125df9e41805cef9d77f>`
	#define :target:`LIBCONFIG_TYPENAME_SINT_16<doxid-group__libccc_1ga7219a72551d3f460ded02df4d3fd5b8a>`
	#define :target:`LIBCONFIG_TYPENAME_SINT_32<doxid-group__libccc_1gac0afcaf171d55d1182a4e28619629fda>`
	#define :target:`LIBCONFIG_TYPENAME_SINT_64<doxid-group__libccc_1ga7274abda4b74294e033d50ab4d28d438>`
	#define :target:`LIBCONFIG_TYPENAME_SINT_8<doxid-group__libccc_1gaaaceb59a80ac8c96643680ad185de030>`
	#define :target:`LIBCONFIG_TYPENAME_SIZE<doxid-group__libccc_1gad855c26654c3f603d318646db4362fc7>`
	#define :target:`LIBCONFIG_TYPENAME_TENSOR<doxid-group__libccc_1ga0abce5be5b1c843955f9844d2d051e71>`
	#define :target:`LIBCONFIG_TYPENAME_TIME<doxid-group__libccc_1ga34418e603f8b1c5948137b7b9132babc>`
	#define :target:`LIBCONFIG_TYPENAME_TIMESPEC<doxid-group__libccc_1ga4237f57f121a3ba0bf13fd98fcdcf4c9>`
	#define :target:`LIBCONFIG_TYPENAME_TIMEZONE<doxid-group__libccc_1ga1408b65be04ea749240da6d88b52f1b5>`
	#define :target:`LIBCONFIG_TYPENAME_TIME_DATE<doxid-group__libccc_1ga72d4030eacadcaf44a8dbb79bb44526c>`
	#define :target:`LIBCONFIG_TYPENAME_TIME_MONTH<doxid-group__libccc_1ga97661fc1a004b4672792cc15d8759e48>`
	#define :target:`LIBCONFIG_TYPENAME_TIME_WEEKDAY<doxid-group__libccc_1gab9cdcfa526e65f27f2dce626ac14e126>`
	#define :target:`LIBCONFIG_TYPENAME_TREE<doxid-group__libccc_1ga2aac33a0af5ea5d6f663d8d6a6b8ff1d>`
	#define :target:`LIBCONFIG_TYPENAME_UINT<doxid-group__libccc_1ga9a8af80b10ce4d4f7b06329219a0fa39>`
	#define :target:`LIBCONFIG_TYPENAME_UINTMAX<doxid-group__libccc_1ga08126be4ac4ce7b0a3acf409015b5aaa>`
	#define :target:`LIBCONFIG_TYPENAME_UINTPTR<doxid-group__libccc_1gacc3d2d30cc797011bdb298e587cc9bf3>`
	#define :target:`LIBCONFIG_TYPENAME_UINT_128<doxid-group__libccc_1ga4af57da3c8cf664e8b8bb78931e7d248>`
	#define :target:`LIBCONFIG_TYPENAME_UINT_16<doxid-group__libccc_1gaee9ebc0b2c8d6fbb07b016d91b06fad8>`
	#define :target:`LIBCONFIG_TYPENAME_UINT_32<doxid-group__libccc_1gae5144bae183141909d866bddfea2000a>`
	#define :target:`LIBCONFIG_TYPENAME_UINT_64<doxid-group__libccc_1gac4d73b57d3d6bd79d45f9d811dc1f99a>`
	#define :target:`LIBCONFIG_TYPENAME_UINT_8<doxid-group__libccc_1gaa5818ee41c3e216e9adeb2e4eccf30de>`
	#define :target:`LIBCONFIG_TYPENAME_UTF8<doxid-group__libccc_1ga00209267eadb17c7b1bfe136bba00307>`
	#define :target:`LIBCONFIG_TYPENAME_VECTOR<doxid-group__libccc_1gaba84b5ddc87ae4ef57367429f735d7b0>`
	#define :target:`LIBCONFIG_TYPENAME_VECTOR2D<doxid-group__libccc_1ga0651854334c2c53b5e6d3d5f4f193cc2>`
	#define :target:`LIBCONFIG_TYPENAME_VECTOR3D<doxid-group__libccc_1gac41a26a852bcc6a62804ee96bb3d7b72>`
	#define :target:`LIBCONFIG_TYPENAME_VECTOR4D<doxid-group__libccc_1gac39fd60014ae7300a9f426f456f835a7>`
	#define :target:`LIBCONFIG_TYPE_FIXED<doxid-group__libccc_1ga5787570598b4b058f064865327eaf8ac>`
	#define :target:`LIBCONFIG_TYPE_FLOAT<doxid-group__libccc_1ga8b4efeeb90964088b7251e88b640732e>`
	#define :target:`LIBCONFIG_TYPE_SINT<doxid-group__libccc_1gaa15492a3641cb0e27304c612e7f29fa9>`
	#define :target:`LIBCONFIG_TYPE_UINT<doxid-group__libccc_1ga6b42e1994718f94f3f19621f39f98606>`
	#define :ref:`LIBCONFIG_USE_FAST_APPROX_MATH<doxid-group__libccc_1gac47e7bbad89ac9ce2a3c9906b798c346>`
	#define :ref:`LIBCONFIG_USE_STD_COMPLEX<doxid-group__libccc_1ga70e5ad90076999fac5205baf90d96e90>`
	#define :ref:`LIBCONFIG_USE_STD_FIXEDPOINT<doxid-group__libccc_1gaaa6bb8eb6ebe31ebf0fce3b39f0db81e>`
	#define :ref:`LIBCONFIG_USE_STD_FUNCTIONS_ALWAYS<doxid-group__libccc_1ga1020a8568fd919f9da80aa0c2bffbab7>`
	#define :ref:`NAMINGSTYLE_ENUM<doxid-group__libccc_1ga43a83706af330061eb0e7a9b6b160f32>`
	#define :ref:`NAMINGSTYLE_ENUM_CAMELCASE<doxid-group__libccc_1gacd21a9fd8b25d2bc9514ccdf5c5c0edf>`
	#define :ref:`NAMINGSTYLE_ENUM_CSTYLE<doxid-group__libccc_1ga421988ad9cf4ee7f90e74f7ef8897314>`
	#define :ref:`NAMINGSTYLE_ENUM_PASCALCASE<doxid-group__libccc_1ga72b78c8e2c3bd3b57698f0e0795c2038>`
	#define :ref:`NAMINGSTYLE_ENUM_SCREAMCASE<doxid-group__libccc_1ga92327050664567b0b46ba38d6a29d818>`
	#define :ref:`NAMINGSTYLE_ENUM_SNAKECASE<doxid-group__libccc_1gae3014584f84ff770a8b66368a06b9249>`
	#define :ref:`NAMINGSTYLE_FLAG_HUNGARIAN_PREFIX<doxid-group__libccc_1ga5f1b045aa48cbceb2a73b4fb6d30968e>`
	#define :ref:`NAMINGSTYLE_FLAG_HUNGARIAN_SUFFIX<doxid-group__libccc_1ga7f354a43ce36cbda79bd43b72a1915f0>`
	#define :ref:`NAMINGSTYLE_FLAG_HUNGARIAN_UPPERCASE<doxid-group__libccc_1ga704768d8192c1cf157dbe7ec92eb75b9>`
	#define :ref:`OK<doxid-group__libccc_1gaba51915c87d64af47fb1cc59348961c9>`
	#define :ref:`STRING<doxid-group__libccc_1ga272429706ecca49feb29cabc8b0697b2>`(TOKEN)
	#define :target:`STRING_<doxid-group__libccc_1ga28848843dfe528e0157ac25571f7a140>`(TOKEN)

	#define :target:`TYPEDEF_ALIAS<doxid-group__libccc_1ga4d319b9aec474f87e5cbd66e82270714>`( \
		TYPE, \
		NAME, \
		KIND \
		)

	#define :ref:`_ALIAS<doxid-group__libccc_1gae53a1f108ffb1a83e37ccc2168904b72>`(FUNCTION)
	#define :ref:`_ALIGN<doxid-group__libccc_1gab39cb78776973cfb0fde58512d4e7298>`(MINIMUM)
	#define :ref:`_DELETE<doxid-group__libccc_1ga2ea0aa5efd4ff12eb16eade210d03ec9>`()

	#define :target:`_FORMAT<doxid-group__libccc_1ga522161b3594f2e7a25396132d9e2f267>`( \
		FUNCTION, \
		POS_FORMAT, \
		POS_VARARGS \
		)

	#define :ref:`_INLINE<doxid-group__libccc_1ga2359d700da2e1722d779b765d82eb347>`()
	#define :ref:`_MALLOC<doxid-group__libccc_1ga651950e6134e00bc771947f298d148c1>`()
	#define :ref:`_PACKED<doxid-group__libccc_1ga87f2008814364facc78ee21953ac5b12>`()
	#define :ref:`_PURE<doxid-group__libccc_1ga2f8536da63f58142f608da7b8aa8eeb5>`()
	#define :ref:`_UNUSED<doxid-group__libccc_1ga5f027d285413c8866f56382500a75f40>`()

	#define :ref:`foreach<doxid-group__libccc_1ga28ab025aeaec3b498d66e2b9cc43c74f>`( \
		VARIABLE_TYPE, \
		VARIABLE, \
		ITERABLE_TYPE, \
		ITERABLE \
		)

.. _details-group__libccc:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This file is simply meant to include all the primitive types together.

This header defines all the common macros/defines used to "extend" C.

This header defines all the primitive types and common macros to use.

Macros
------

.. index:: pair: define; CONCAT
.. _doxid-group__libccc_1gae7be8d94ef3433b06c349d722941d3b0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define CONCAT(TOKEN1, TOKEN2)

This macro function expands and merges the two given tokens ``TOKEN1`` and ``TOKEN2`` into a single token.

.. index:: pair: define; ERROR
.. _doxid-group__libccc_1ga8fe83ac76edc595f6b98cd4a4127aed5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define ERROR

Represents a failure function return.

.. index:: pair: define; HUNGARIAN_ENUM
.. _doxid-group__libccc_1ga58990bff0dc5971dbfa1baeb2a5de57c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define HUNGARIAN_ENUM

Hungarian type prefix/suffix for an enum typedef.

.. index:: pair: define; HUNGARIAN_FUNCTION
.. _doxid-group__libccc_1ga7692350364cf399c014ef369fb846397:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define HUNGARIAN_FUNCTION

Hungarian type prefix/suffix for a function pointer typedef.

.. index:: pair: define; HUNGARIAN_PRIMITIVE
.. _doxid-group__libccc_1ga18c31071065cc09d74764cd99bc34a4e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define HUNGARIAN_PRIMITIVE

Hungarian type prefix/suffix for a primitive typedef.

.. index:: pair: define; HUNGARIAN_STRUCT
.. _doxid-group__libccc_1gaaeed2faba04f0354fd8f01296e46a342:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define HUNGARIAN_STRUCT

Hungarian type prefix/suffix for a struct typedef.

.. index:: pair: define; HUNGARIAN_UNION
.. _doxid-group__libccc_1ga49e29c9d235b230d591e6a89b180b103:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define HUNGARIAN_UNION

Hungarian type prefix/suffix for a union typedef.

.. index:: pair: define; INCBIN
.. _doxid-group__libccc_1ga73431ba9d27af74793901561ae448116:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define INCBIN(_NAME, _FILEPATH)

This macro includes the given binary file at "_PATH" (string) into a global const variable named ``_NAME`` (token)



.. rubric:: Parameters:

.. list-table::
	:widths: 20 80

	*
		- _NAME

		- The name to give to the global variable(s) which will be created

	*
		- _FILEPATH

		- 



.. rubric:: Returns:

This macro doesn't return anything per se, but it declares 3 global variables within its ASM code:

* ``t_u8 const* _NAME`` The statically allocated byte array containing the binary file data

* ``t_u8 const* _NAME##_end`` The pointer to the end of the file data byte array: contains 1 byte set to zero (works like a string null-terminator)

* ``int const* _NAME##_size`` The pointer 1 byte after '\*_end', contains the file size. Use it like this: t_size len = (t_size)(\*myfile_size);

.. index:: pair: define; LIBCONFIG_BITS_FIXED
.. _doxid-group__libccc_1gaa5d56c2abf4a218f7a150dbab66ef199:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define LIBCONFIG_BITS_FIXED

Defines which type/bit size the ``t_fixed`` default fixed-point number type will be.

The following macro sets what the ``t_fixed`` default fixed-point type should be. There are 4 possible accepted values for this #define:

* 16 for 16-bit fixed-point number

* 32 for 32-bit fixed-point number

* 64 for 64-bit fixed-point number

* 128 for 128-bit fixed-point number (not present on all platforms)

.. index:: pair: define; LIBCONFIG_BITS_FLOAT
.. _doxid-group__libccc_1gae831a75f400b727ef8cb54fec109ca28:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define LIBCONFIG_BITS_FLOAT

Defines which type/bit size the ``t_float`` default floating-point number type will be.

The following macro sets what the ``t_float`` default floating-point type should be. There are 4 possible accepted values for this #define:

* 32 for 32-bit IEEE 754 single-precision floating-point number

* 64 for 64-bit IEEE 754 double-precision floating-point number

* 80 for 80-bit x86 extended-precision floating-point number (not present on all platforms)

* 128 for 128-bit IEEE 754 quadruple-precision floating-point number (not present on all platforms)

.. index:: pair: define; LIBCONFIG_BITS_SINT
.. _doxid-group__libccc_1gaac372d149c7d1452ad8f81414a6c75ab:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define LIBCONFIG_BITS_SINT

Defines which type/bit size the ``t_sint`` default signed integer type will be.

This macro sets the default ``t_sint`` default signed integer type to use: There are 5 possible accepted values for this #define:

* 8 for 8-bit int [-128, 127]

* 16 for 16-bit int [-32648, 32647]

* 32 for 32-bit int [-2147483648, 2147483647]

* 64 for 64-bit int [-9223372036854775808, +9223372036854775807]

* 128 for 128-bit int (not present on all platforms)

.. index:: pair: define; LIBCONFIG_BITS_UINT
.. _doxid-group__libccc_1ga86d00a69dfe2e664c87a03499d7b5f5a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define LIBCONFIG_BITS_UINT

Defines which type/bit size the ``t_uint`` default unsigned integer type will be.

This macro sets the default ``t_uint`` default unsigned integer type to use. There are 5 possible accepted values for this #define:

* 8 for 8-bit uint [0, 255]

* 16 for 16-bit uint [0, 65535]

* 32 for 32-bit uint [0, 2147483647]

* 64 for 64-bit uint [0, 18446744073709551615]

* 128 for 128-bit uint (not present on all platforms)

.. index:: pair: define; LIBCONFIG_HANDLE_NULLPOINTERS
.. _doxid-group__libccc_1ga97f207da9392f6cba9c7946bb7697a70:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define LIBCONFIG_HANDLE_NULLPOINTERS

If 1, libccc functions handle NULL pointers args, otherwise they segfault.

This macro determines how NULL pointer arguments are to be handled

* If 0, then libccc functions will always segfault when given NULL pointers.

* If 1, then all NULL pointer accesses in libccc functions will be avoided, and an appropriate return value (eg:NULL, 0, sometimes -1) will be returned.

.. index:: pair: define; LIBCONFIG_LIST_DOUBLYLINKED
.. _doxid-group__libccc_1ga2dbec267fbf6efd24e1efc6d21d1ff68:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define LIBCONFIG_LIST_DOUBLYLINKED

If 1, doing ``#include "libccc/array/list.h"`` will define a doubly-linked list.

This macro configures whether the ``s_list`` type is singly-linked or doubly-linked. NB: This must be set BEFORE including the ``libccc/array/list.h`` header file

* If 0, ``s_list`` is singly-linked (that is, the struct only holds a ``.next`` pointer)

* If 1, ``s_list`` is doubly-linked (that is, the struct has both a ``.prev`` and ``.next`` pointer)

.. index:: pair: define; LIBCONFIG_LIST_NAME
.. _doxid-group__libccc_1ga6bfbca501d2dc404b4702e129ca7e127:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define LIBCONFIG_LIST_NAME

The type name used by the linked-list type (by default it is ``s_list``).

.. index:: pair: define; LIBCONFIG_LIST_TYPE
.. _doxid-group__libccc_1ga4a770b9d67958d3ffe84c94afb4d0942:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define LIBCONFIG_LIST_TYPE

The item type used by the ``s_list`` struct (by default it is ``void*``, ie: dynamic list).

.. index:: pair: define; LIBCONFIG_NAMINGSTYLE_TYPES
.. _doxid-group__libccc_1ga8ef160b822ec74fd6c6455647386e506:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define LIBCONFIG_NAMINGSTYLE_TYPES

Configures the typedef nomenclature style used by libccc.

This macro sets the nomenclature style that libccc uses for typedefs. The value works like both an enum and a bitflag simultaneously: you can see how this works at the bottom of this file. NB: By default, this is (NAMINGSTYLE_ENUM_SNAKECASE \| NAMINGSTYLE_FLAG_HUNGARIAN_PREFIX) This style is used thoughout libccc's code. As such, if you set another style, it will actually a typedef alias above the existing type. For example: Having NAMINGSTYLE_ENUM_SCREAMCASE will create a typedef for ``t_u32`` which is ``U32``

.. index:: pair: define; LIBCONFIG_USE_FAST_APPROX_MATH
.. _doxid-group__libccc_1gac47e7bbad89ac9ce2a3c9906b798c346:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define LIBCONFIG_USE_FAST_APPROX_MATH

If 1, libccc uses its own fast-approximate math functions, otherwise it's the builtin FPU calls.

This macro determines which math function implementations should be used.

* If 1, the libccc fast approximate functions will be used (precision error margin: 0.0001)

* If 0, the builtin FPU-call libc math functions will be used (eg: \__builtin_powf(), etc)

.. index:: pair: define; LIBCONFIG_USE_STD_COMPLEX
.. _doxid-group__libccc_1ga70e5ad90076999fac5205baf90d96e90:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define LIBCONFIG_USE_STD_COMPLEX

If 1, libccc uses exact bit length for t_s8, t_s16, t_s32, t_s64, t_u8, t_u16, t_u32, and t_u64.

This macro configures which stdint.h integer types are used by default, as well as setting the corresponding appropriate ``[INT]_MAX`` and ``[INT]_MIN`` values. There are 3 possible values for this #define:

* (undefined) EXACT: This is the default - uses the 'exact size' integer types (int8_t, etc)

* This is the recommended option as it ensures consistent overflow behavior on ints.

* Unfortunately, certain platforms do not have these types, so the others can also be of use.

* _least LEAST: Uses the smallest available integer type with at least ``n`` bits (``int_least8_t``, etc)

* _fast FAST: Uses the fastest available integer type with at least ``n`` bits (``int_fast8_t``, etc) If 1, libccc will make the ``t_complex`` types use the STDC _Complex type

TODO implement & document this

.. index:: pair: define; LIBCONFIG_USE_STD_FIXEDPOINT
.. _doxid-group__libccc_1gaaa6bb8eb6ebe31ebf0fce3b39f0db81e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define LIBCONFIG_USE_STD_FIXEDPOINT

If 1, libccc will make the fixed point types 't_g\*' and ``t_fixed`` use the STDC ``_Sat, _Fract, _Accum`` types.

It is recommended to keep this set to 0, as the STD C fixed-point types are not yet standard (ie: ``_Accum``, ``_Fract``, and ``_Sat`` are not present on all platforms, only GCC implements them). Furthermore, the libccc fixed-point type may not be as fast as a STD C implementation which may leverage the platform's ASM, but it is configurable in terms of what portion of the fixed-point number type is dedicated to the integral/fractional part.

.. index:: pair: define; LIBCONFIG_USE_STD_FUNCTIONS_ALWAYS
.. _doxid-group__libccc_1ga1020a8568fd919f9da80aa0c2bffbab7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define LIBCONFIG_USE_STD_FUNCTIONS_ALWAYS

If 1, libccc will define its functions as simple inline wrappers for STD C calls.

This macro determines if the compiler should prefer function implementations from the platform's standard library, or the implementation from libccc.

* If 0, use libccc function implementations everywhere

* If 1, call stdlib implementations rather than libccc wherever possible NB: Setting this to 1 can make your code run faster, but it may introduce undefined behaviors depending on the platform (for edge-case arguments). Also, it invalidates the LIBCONFIG_HANDLE_NULLPOINTERS setting: NULL pointer handling is implementation-dependent for STD C functions.

.. index:: pair: define; NAMINGSTYLE_ENUM
.. _doxid-group__libccc_1ga43a83706af330061eb0e7a9b6b160f32:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define NAMINGSTYLE_ENUM

Naming-style enum region bitmask.

.. index:: pair: define; NAMINGSTYLE_ENUM_CAMELCASE
.. _doxid-group__libccc_1gacd21a9fd8b25d2bc9514ccdf5c5c0edf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define NAMINGSTYLE_ENUM_CAMELCASE

mixedcase (char 1 lower): ``exampleType``

.. index:: pair: define; NAMINGSTYLE_ENUM_CSTYLE
.. _doxid-group__libccc_1ga421988ad9cf4ee7f90e74f7ef8897314:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define NAMINGSTYLE_ENUM_CSTYLE

lowercase & abbreviated: ``extype``

.. index:: pair: define; NAMINGSTYLE_ENUM_PASCALCASE
.. _doxid-group__libccc_1ga72b78c8e2c3bd3b57698f0e0795c2038:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define NAMINGSTYLE_ENUM_PASCALCASE

mixedcase (char 1 upper): ``ExampleType``

.. index:: pair: define; NAMINGSTYLE_ENUM_SCREAMCASE
.. _doxid-group__libccc_1ga92327050664567b0b46ba38d6a29d818:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define NAMINGSTYLE_ENUM_SCREAMCASE

uppercase & underscores: ``EXAMPLE_TYPE``

.. index:: pair: define; NAMINGSTYLE_ENUM_SNAKECASE
.. _doxid-group__libccc_1gae3014584f84ff770a8b66368a06b9249:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define NAMINGSTYLE_ENUM_SNAKECASE

lowercase & underscores: ``example_type``

.. index:: pair: define; NAMINGSTYLE_FLAG_HUNGARIAN_PREFIX
.. _doxid-group__libccc_1ga5f1b045aa48cbceb2a73b4fb6d30968e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define NAMINGSTYLE_FLAG_HUNGARIAN_PREFIX

If 1, adds type prefix: ``t_example_type``

.. index:: pair: define; NAMINGSTYLE_FLAG_HUNGARIAN_SUFFIX
.. _doxid-group__libccc_1ga7f354a43ce36cbda79bd43b72a1915f0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define NAMINGSTYLE_FLAG_HUNGARIAN_SUFFIX

If 1, adds type suffix: ``example_type_t``

.. index:: pair: define; NAMINGSTYLE_FLAG_HUNGARIAN_UPPERCASE
.. _doxid-group__libccc_1ga704768d8192c1cf157dbe7ec92eb75b9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define NAMINGSTYLE_FLAG_HUNGARIAN_UPPERCASE

If 1, hungarian prefix/suffix is uppercase.

.. index:: pair: define; OK
.. _doxid-group__libccc_1gaba51915c87d64af47fb1cc59348961c9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define OK

Represents a successful function return.

.. index:: pair: define; STRING
.. _doxid-group__libccc_1ga272429706ecca49feb29cabc8b0697b2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define STRING(TOKEN)

This macro function expands and stringizes the given ``TOKEN`` argument.

.. index:: pair: define; _ALIAS
.. _doxid-group__libccc_1gae53a1f108ffb1a83e37ccc2168904b72:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define _ALIAS(FUNCTION)

Before a function or variable def: sets the token to be an alias for the one given as arg.

.. index:: pair: define; _ALIGN
.. _doxid-group__libccc_1gab39cb78776973cfb0fde58512d4e7298:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define _ALIGN(MINIMUM)

Before a function or variable def: sets minimum byte alignment size (power of 2)

.. index:: pair: define; _DELETE
.. _doxid-group__libccc_1ga2ea0aa5efd4ff12eb16eade210d03ec9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define _DELETE()

Before a function def: indicates that it deletes/frees memory.

.. index:: pair: define; _INLINE
.. _doxid-group__libccc_1ga2359d700da2e1722d779b765d82eb347:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define _INLINE()

Before a function def: makes the function be always inlined regardless of compiler config.

.. index:: pair: define; _MALLOC
.. _doxid-group__libccc_1ga651950e6134e00bc771947f298d148c1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define _MALLOC()

Before a function def: indicates that it returns newly allocated ptr.

.. index:: pair: define; _PACKED
.. _doxid-group__libccc_1ga87f2008814364facc78ee21953ac5b12:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define _PACKED()

Before a struct/union def: do not perform byte-padding on this struct/union type.

.. index:: pair: define; _PURE
.. _doxid-group__libccc_1ga2f8536da63f58142f608da7b8aa8eeb5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define _PURE()

Before a function def: indicates that the function has no side-effects.

.. index:: pair: define; _UNUSED
.. _doxid-group__libccc_1ga5f027d285413c8866f56382500a75f40:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define _UNUSED()

Before a function def: suppresses warnings for empty/incomplete function.

.. index:: pair: define; foreach
.. _doxid-group__libccc_1ga28ab025aeaec3b498d66e2b9cc43c74f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define foreach(VARIABLE_TYPE, VARIABLE, ITERABLE_TYPE, ITERABLE)

A 'foreach' keyword macro, to use with any iterable types, rather than an index-based 'for' loop.

