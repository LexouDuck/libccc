.. index:: pair: group; 20) libccc/math/complex
.. _doxid-group__libccc__math__complex:

20) libccc/math/complex
=======================

.. toctree::
	:hidden:

	struct_s_complex_.rst
	struct_s_quaternion_.rst

Overview
~~~~~~~~

This header defines useful algebra and calculus types, and functions. :ref:`More...<details-group__libccc__math__complex>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// typedefs

	typedef struct :ref:`s_complex_<doxid-structs__complex__>` :ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>`;
	typedef struct :ref:`s_quaternion_<doxid-structs__quaternion__>` :ref:`s_quaternion<doxid-group__libccc__math__complex_1ga975ea629f3dfc37d4a8922451180afa5>`;

	// structs

	struct :ref:`s_complex_<doxid-structs__complex__>`;
	struct :ref:`s_quaternion_<doxid-structs__quaternion__>`;

	// global functions

	:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>`* :ref:`Complex_New<doxid-group__libccc__math__complex_1ga0121bf347fb4e1c7b1d05a6e8b9620ad>`(:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` re, :ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` im);
	:ref:`t_bool<doxid-group__libccc__bool_1gaf15d2c7169c336f97175a2e218d22e73>` :ref:`Complex_Equals<doxid-group__libccc__math__complex_1ga64aa8727d5f8c577393004fbd158d8f8>`(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z1, :ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z2);
	:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` :ref:`Complex_Abs<doxid-group__libccc__math__complex_1gaef2137203f80dff3867d224e214bb212>`(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z1);
	:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` :ref:`Complex_Conjugate<doxid-group__libccc__math__complex_1ga02c3f8e0fe099df17cef8c5d8239a41f>`(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z1);
	:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` :ref:`Complex_Add<doxid-group__libccc__math__complex_1ga54f72120d0a2f341b5c63b2539e98f98>`(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z1, :ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z2);
	:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` :ref:`Complex_Subtract<doxid-group__libccc__math__complex_1ga0565e40f605c893b911ba69959ce7dbc>`(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z1, :ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z2);
	:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` :ref:`Complex_Multiply<doxid-group__libccc__math__complex_1ga6bf1bd6b128627c53684b87cff0b9265>`(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z1, :ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z2);
	:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` :ref:`Complex_Divide<doxid-group__libccc__math__complex_1ga2cf4a45e78166da08f543737e2670651>`(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z1, :ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z2);
	:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` :ref:`Complex_Power<doxid-group__libccc__math__complex_1gab9a3f68d12a1df754b70673812ee04f9>`(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z, t_u8 n);

	// macros

	#define :ref:`COMPLEX_NULL<doxid-group__libccc__math__complex_1ga6fbbbe01fed7f3a7bb2966d10dad2a44>`
	#define :target:`Complex_Conj<doxid-group__libccc__math__complex_1ga6224f2e147eff02270ad85515572685d>`
	#define :target:`Complex_Div<doxid-group__libccc__math__complex_1ga3f3726d2a524cd4bb8217d858ab9ee91>`
	#define :target:`Complex_Modulus<doxid-group__libccc__math__complex_1gab50249335d6d24a65ff6efe4939aa589>`
	#define :target:`Complex_Mul<doxid-group__libccc__math__complex_1ga7aa62fa78aa30b33a9a64d07c323c29f>`
	#define :target:`Complex_Pow<doxid-group__libccc__math__complex_1ga504e27c98534becd527b35e51754b9b0>`
	#define :target:`Complex_Sub<doxid-group__libccc__math__complex_1ga92b4b34b2463cee4db7f0b1ffac4813f>`
	#define :target:`c_cplxabs<doxid-group__libccc__math__complex_1gaea396201bf4c09a15ea1754da338098a>`
	#define :target:`c_cplxadd<doxid-group__libccc__math__complex_1ga355cafca23dfd7480d1cea10b0047c3b>`
	#define :target:`c_cplxconj<doxid-group__libccc__math__complex_1ga0cbe17de5111fa23d72c8bd55d721a80>`
	#define :target:`c_cplxdiv<doxid-group__libccc__math__complex_1gad718cfefc9c12ec75a0a92fabf5cbd04>`
	#define :target:`c_cplxequ<doxid-group__libccc__math__complex_1ga7ae66cb14bcbc5a55667a58e2e7fab0f>`
	#define :target:`c_cplxmul<doxid-group__libccc__math__complex_1ga544a0bcc9ab319ddd8f98148bfc664bc>`
	#define :target:`c_cplxnew<doxid-group__libccc__math__complex_1ga7c583003ea1e0670514c3530d69f851e>`
	#define :target:`c_cplxpow<doxid-group__libccc__math__complex_1ga8b313992dc5de01445a3c64494541e26>`
	#define :target:`c_cplxsub<doxid-group__libccc__math__complex_1ga6418444f027a35848c2a19e04325b8c6>`

.. _details-group__libccc__math__complex:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This header defines useful algebra and calculus types, and functions.

Typedefs
--------

.. index:: pair: typedef; s_complex
.. _doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct :ref:`s_complex_<doxid-structs__complex__>` s_complex

A struct to store complex/imaginary number values.

.. index:: pair: typedef; s_quaternion
.. _doxid-group__libccc__math__complex_1ga975ea629f3dfc37d4a8922451180afa5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct :ref:`s_quaternion_<doxid-structs__quaternion__>` s_quaternion

A struct for storing quaternions.

Global Functions
----------------

.. index:: pair: function; Complex_New
.. _doxid-group__libccc__math__complex_1ga0121bf347fb4e1c7b1d05a6e8b9620ad:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>`* Complex_New(:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` re, :ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` im)

Allocates a new complex number struct on heap, with the given 're' real part and 'im' imaginary part.

.. index:: pair: function; Complex_Equals
.. _doxid-group__libccc__math__complex_1ga64aa8727d5f8c577393004fbd158d8f8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_bool<doxid-group__libccc__bool_1gaf15d2c7169c336f97175a2e218d22e73>` Complex_Equals(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z1, :ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z2)

Returns TRUE if the two given complex numbers are equal.

.. index:: pair: function; Complex_Abs
.. _doxid-group__libccc__math__complex_1gaef2137203f80dff3867d224e214bb212:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` Complex_Abs(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z1)

Returns the absolute value \|z\| of the given complex number 'z' (its distance from zero)

.. index:: pair: function; Complex_Conjugate
.. _doxid-group__libccc__math__complex_1ga02c3f8e0fe099df17cef8c5d8239a41f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` Complex_Conjugate(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z1)

Returns the conjugate of the given complex number (inverts the sign of its imaginary part)

.. index:: pair: function; Complex_Add
.. _doxid-group__libccc__math__complex_1ga54f72120d0a2f341b5c63b2539e98f98:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` Complex_Add(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z1, :ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z2)

Returns the result of the addition of the two given complex numbers.

.. index:: pair: function; Complex_Subtract
.. _doxid-group__libccc__math__complex_1ga0565e40f605c893b911ba69959ce7dbc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` Complex_Subtract(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z1, :ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z2)

Returns the result of the subtraction of the two given complex numbers.

.. index:: pair: function; Complex_Multiply
.. _doxid-group__libccc__math__complex_1ga6bf1bd6b128627c53684b87cff0b9265:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` Complex_Multiply(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z1, :ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z2)

Returns the result of the multiplication of the two given complex numbers.

.. index:: pair: function; Complex_Divide
.. _doxid-group__libccc__math__complex_1ga2cf4a45e78166da08f543737e2670651:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` Complex_Divide(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z1, :ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z2)

Returns the result of the divide of the two given complex numbers.

.. index:: pair: function; Complex_Power
.. _doxid-group__libccc__math__complex_1gab9a3f68d12a1df754b70673812ee04f9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` Complex_Power(:ref:`s_complex<doxid-group__libccc__math__complex_1ga3df078c268b2888b4458fe04f46cd81d>` const* z, t_u8 n)

Returns the given complex number, to the power of 'n'.

Macros
------

.. index:: pair: define; COMPLEX_NULL
.. _doxid-group__libccc__math__complex_1ga6fbbbe01fed7f3a7bb2966d10dad2a44:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define COMPLEX_NULL

Zero, as a complex number type.

