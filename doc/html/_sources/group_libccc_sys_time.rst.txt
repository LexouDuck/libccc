.. index:: pair: group; 13) libccc/sys/time
.. _doxid-group__libccc__sys__time:

13) libccc/sys/time
===================

.. toctree::
	:hidden:

	enum_e_month_.rst
	enum_e_weekday_.rst
	struct_s_date_.rst
	struct_s_timespec_.rst

Overview
~~~~~~~~

This header defines all the functions for date & time related functions. :ref:`More...<details-group__libccc__sys__time>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// typedefs

	typedef time_t :ref:`t_time<doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca>`;
	typedef struct :ref:`s_timespec_<doxid-structs__timespec__>` :ref:`s_timespec<doxid-group__libccc__sys__time_1ga15573304fdba9fa8f6f0046887c8fd5c>`;
	typedef enum :ref:`e_weekday_<doxid-group__libccc__sys__time_1gac389255cf85a435a3d026e8a83309153>` :ref:`e_weekday<doxid-group__libccc__sys__time_1gadf660d127ff6a2087b5b40212d894ec6>`;
	typedef enum :ref:`e_month_<doxid-group__libccc__sys__time_1gab0619a9b3d5c8e9792ef82deab1b4075>` :ref:`e_month<doxid-group__libccc__sys__time_1gabfbaef83dda6b8027691e3c77484cf60>`;
	typedef :ref:`t_sint<doxid-group__libccc__int_1gad9b833ec2906279e4f479df31778732a>` :ref:`t_timezone<doxid-group__libccc__sys__time_1ga27d157f4fc1761ff865663ec41bc6945>`;
	typedef struct :ref:`s_date_<doxid-structs__date__>` :ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>`;

	// enums

	enum :ref:`e_month_<doxid-group__libccc__sys__time_1gab0619a9b3d5c8e9792ef82deab1b4075>`;
	enum :ref:`e_weekday_<doxid-group__libccc__sys__time_1gac389255cf85a435a3d026e8a83309153>`;

	// structs

	struct :ref:`s_date_<doxid-structs__date__>`;
	struct :ref:`s_timespec_<doxid-structs__timespec__>`;

	// global variables

	char const*const :ref:`g_weekday<doxid-group__libccc__sys__time_1ga0ba1c91deb3da42db89b6d86ed4411f6>`[ENUMLENGTH_WEEKDAY];
	char const*const :ref:`g_weekday_abbreviated<doxid-group__libccc__sys__time_1gada53cfe21fed2fac2cad871b86c40241>`[ENUMLENGTH_WEEKDAY];
	char const*const :ref:`g_month<doxid-group__libccc__sys__time_1ga11267d04f29a1e875268e816953de2e6>`[ENUMLENGTH_MONTH];
	char const*const :ref:`g_month_abbreviated<doxid-group__libccc__sys__time_1ga08cfd3d67f32b4ed901ed8225139b9fb>`[ENUMLENGTH_MONTH];

	// global functions

	:ref:`t_time<doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca>` :ref:`Time_Now<doxid-group__libccc__sys__time_1ga5f5cf2ae075289ff0f22bc533785a7ca>`(void);
	:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` :ref:`Time_ToDate_UTC<doxid-group__libccc__sys__time_1ga695e40e057e2a877ade56c3aa601bb15>`(:ref:`t_time<doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca>` const value);
	:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` :ref:`Time_ToDate_LocalTime<doxid-group__libccc__sys__time_1ga775b9662f2491a887d3bd323232f0a61>`(:ref:`t_time<doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca>` const value);
	struct timespec :ref:`Timespec_ToSTDC<doxid-group__libccc__sys__time_1gadf0cb090ab0c4c98125e0aabb622a944>`(:ref:`s_timespec<doxid-group__libccc__sys__time_1ga15573304fdba9fa8f6f0046887c8fd5c>` const* value);
	:ref:`s_timespec<doxid-group__libccc__sys__time_1ga15573304fdba9fa8f6f0046887c8fd5c>` :ref:`Timespec_FromSTDC<doxid-group__libccc__sys__time_1gadeecf7a946c7b63a9188b06876073381>`(struct timespec const* value);
	:ref:`t_time<doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca>` :ref:`Time_SetTimezone<doxid-group__libccc__sys__time_1ga5be9da6d4842ea46c1714d017d906c82>`(:ref:`t_time<doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca>` value, :ref:`t_timezone<doxid-group__libccc__sys__time_1ga27d157f4fc1761ff865663ec41bc6945>` old, :ref:`t_timezone<doxid-group__libccc__sys__time_1ga27d157f4fc1761ff865663ec41bc6945>` new);
	:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` :ref:`Date_SetTimezone<doxid-group__libccc__sys__time_1ga8fe171c183c6be39f24736368e09cb9d>`(:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` const* value, :ref:`t_timezone<doxid-group__libccc__sys__time_1ga27d157f4fc1761ff865663ec41bc6945>` old, :ref:`t_timezone<doxid-group__libccc__sys__time_1ga27d157f4fc1761ff865663ec41bc6945>` new);
	:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` :ref:`Date_Now<doxid-group__libccc__sys__time_1ga847f2c5faa65c35636363158531b8528>`(void);
	:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` :ref:`Date_FromString<doxid-group__libccc__sys__time_1ga9491e5baedba6b92fe8d713b85b25b00>`(char const* str, char const* format);
	char* :ref:`Date_ToString<doxid-group__libccc__sys__time_1gab8a20bcd00022df7a08c69de3279ad4d>`(:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` const* date, char const* format);
	:ref:`t_size<doxid-group__libccc__pointer_1gab26ea4b5e8504781be1c368c28967472>` :ref:`Date_ToString_N<doxid-group__libccc__sys__time_1gae693d0c139e7cc8d860630e314cf0dcb>`(char* dest, :ref:`t_size<doxid-group__libccc__pointer_1gab26ea4b5e8504781be1c368c28967472>` max, :ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` const* date, char const* format);
	:ref:`t_time<doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca>` :ref:`Date_ToTime_UTC<doxid-group__libccc__sys__time_1ga1996220f5778c6014377c4735fab4505>`(:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` const* value);
	:ref:`t_time<doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca>` :ref:`Date_ToTime_LocalTime<doxid-group__libccc__sys__time_1ga4a8152db78789abd2936b24e5f17d29c>`(:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` const* value);
	struct tm :ref:`Date_ToSTDC<doxid-group__libccc__sys__time_1ga519ca62fd4714ff42c2d2856028d9f48>`(:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` const* date);
	:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` :ref:`Date_FromSTDC<doxid-group__libccc__sys__time_1ga80cb2a3053c151d53fe94abdb4ee37a5>`(struct tm const* value);

	// macros

	#define :target:`DATE_NULL<doxid-group__libccc__sys__time_1gaf8db6e6409a7a0424cfd15bc15b5e979>`
	#define :target:`Date_Format<doxid-group__libccc__sys__time_1ga08b037c82c22424ea815cbdb91ca6d06>`
	#define :target:`Date_FormatString<doxid-group__libccc__sys__time_1gadcb11c2d073f9d8a355263a0b31fd454>`
	#define :target:`Date_FormatString_N<doxid-group__libccc__sys__time_1gaa32aec4525b424d844f6b9660c726105>`
	#define :target:`Date_Format_N<doxid-group__libccc__sys__time_1gab7e7d94d94f2a7ba6eb9cd8b4b3231ef>`
	#define :target:`Date_Parse<doxid-group__libccc__sys__time_1ga5802069577b063f87a158a5646ed4aa7>`
	#define :target:`Date_ParseString<doxid-group__libccc__sys__time_1ga5ffa2f82887b0858ceb698d95be28aac>`
	#define :target:`Date_ToTime<doxid-group__libccc__sys__time_1ga40566951a1ccfa7b6ce91731c9aa540a>`
	#define :ref:`FORMAT_DATE_DMY<doxid-group__libccc__sys__time_1ga7272e57f24979a90aa8ead70d668513c>`
	#define :ref:`FORMAT_DATE_MDY<doxid-group__libccc__sys__time_1ga57e4b87e4c5a204c6f1e1ebb5c1a2a74>`
	#define :ref:`FORMAT_DATE_UNIX<doxid-group__libccc__sys__time_1gaed0ce332931606fe43ff6fb2af39fd69>`
	#define :ref:`FORMAT_DATE_YMD<doxid-group__libccc__sys__time_1gadd11712bbc61abf0d20958cfaace408e>`
	#define :ref:`FORMAT_TIME_PRIME<doxid-group__libccc__sys__time_1gaba3c62a8515922fcd0fe8dbc11096b72>`
	#define :ref:`FORMAT_TIME_UNIX<doxid-group__libccc__sys__time_1ga73482b8ca273eb61616e4c5ab37a3f99>`
	#define :target:`MONTH_APR<doxid-group__libccc__sys__time_1ga739d5291258bc95b8c4547a9ce82e9bf>`
	#define :target:`MONTH_AUG<doxid-group__libccc__sys__time_1ga897f9dc4a17636e4f80d5c8196b1df2b>`
	#define :target:`MONTH_DEC<doxid-group__libccc__sys__time_1gaaa1b9b5e661b91f4277b3523fd1a7da8>`
	#define :target:`MONTH_FEB<doxid-group__libccc__sys__time_1gacd3bc76680f750e4e7179c5e53df9c41>`
	#define :target:`MONTH_JAN<doxid-group__libccc__sys__time_1gac9dd9ac0ee669cde379ac558163cea27>`
	#define :target:`MONTH_JUL<doxid-group__libccc__sys__time_1ga1902caa9b703742781de3b72d03b88ea>`
	#define :target:`MONTH_JUN<doxid-group__libccc__sys__time_1ga5f175662df6753af7cde33c1c5625346>`
	#define :target:`MONTH_MAR<doxid-group__libccc__sys__time_1gac43b03fdc27511db2e131066311f0f34>`
	#define :target:`MONTH_MAY<doxid-group__libccc__sys__time_1gaa078bb09f8cc863b40a43fd62fa0bfe7>`
	#define :target:`MONTH_NOV<doxid-group__libccc__sys__time_1gaea239ee2cc56cb04fcbaf17e7b741f72>`
	#define :target:`MONTH_OCT<doxid-group__libccc__sys__time_1gaaa1f898bd0f60097f5548f4b6ac2e61a>`
	#define :target:`MONTH_SEP<doxid-group__libccc__sys__time_1ga59bf43774cf782d6f10dc5dac5e8bbe4>`
	#define :target:`TIMESPEC_NULL<doxid-group__libccc__sys__time_1ga2661eebcd8248b6e35a1f8aecc89a4aa>`
	#define :ref:`TIMEZONE_CDT<doxid-group__libccc__sys__time_1ga9a037e8e94048101e4588129cdddc01a>`
	#define :ref:`TIMEZONE_CST<doxid-group__libccc__sys__time_1gad168fc658960a6ada24a0ea47d854418>`
	#define :ref:`TIMEZONE_EDT<doxid-group__libccc__sys__time_1ga8a227e41f4ed3e39bf72565e37a7be46>`
	#define :ref:`TIMEZONE_EST<doxid-group__libccc__sys__time_1ga65c08746b86898b7790f4fb153466fe9>`
	#define :ref:`TIMEZONE_GMT<doxid-group__libccc__sys__time_1ga510b070f8bc82bf24371c5b452904425>`
	#define :ref:`TIMEZONE_MDT<doxid-group__libccc__sys__time_1gaf13155bfc343d9ed5ca39be4a4f1caca>`
	#define :ref:`TIMEZONE_MST<doxid-group__libccc__sys__time_1ga998ff23a82ebd2843797e7c99de745f8>`
	#define :ref:`TIMEZONE_PDT<doxid-group__libccc__sys__time_1gab41154013703d1af31793e59be995091>`
	#define :ref:`TIMEZONE_PST<doxid-group__libccc__sys__time_1gaf93fbb2121097f5e803f167c3570aef4>`
	#define :ref:`TIMEZONE_UTC<doxid-group__libccc__sys__time_1ga5903b2a2c67e39bf10621cf06d40bc7f>`(X)
	#define :ref:`TIMEZONE_UTCMAX<doxid-group__libccc__sys__time_1ga3cdaafd44ef25c126fbf6df3c91fb47b>`
	#define :ref:`TIMEZONE_UTCMIN<doxid-group__libccc__sys__time_1gaeeb59626164e1b4b03b00b6b634ab8f0>`
	#define :ref:`TIME_MAX_DAYS_MONTH<doxid-group__libccc__sys__time_1ga7d0966e83897b110a4268f93fecd6d65>`
	#define :ref:`TIME_MAX_DAYS_YEAR<doxid-group__libccc__sys__time_1ga7aadda422ceafd660a39db68a9b5e33c>`
	#define :ref:`TIME_MAX_HOURS<doxid-group__libccc__sys__time_1ga8c7938426d1ca5f4df51c2e51686d12d>`
	#define :ref:`TIME_MAX_LEAP_DAYS_YEAR<doxid-group__libccc__sys__time_1ga5f3e5803af9054e5e7b0d87623d8cb55>`
	#define :ref:`TIME_MAX_LEAP_SECONDS<doxid-group__libccc__sys__time_1ga332b2d6e7d706faa08fbd558c41dbfd5>`
	#define :ref:`TIME_MAX_MINUTES<doxid-group__libccc__sys__time_1ga2a1fc19918bce8a077c28378586e5f03>`
	#define :ref:`TIME_MAX_SECONDS<doxid-group__libccc__sys__time_1ga9a0709759eb749dab54cb48dc049b26c>`
	#define :target:`TIME_NULL<doxid-group__libccc__sys__time_1gaa401a46393f2ce28dc759ee82acbe48c>`
	#define :target:`Time_To_Date<doxid-group__libccc__sys__time_1ga4b375cd31f51c40d7146da1163141126>`
	#define :target:`WEEKDAY_FRI<doxid-group__libccc__sys__time_1gabccebbe8538f28edbc9159b5510cd04e>`
	#define :target:`WEEKDAY_MON<doxid-group__libccc__sys__time_1ga2473ff22b60a8c664f1c47780b8bcfb9>`
	#define :target:`WEEKDAY_SAT<doxid-group__libccc__sys__time_1gacb4aeb23f1af10589f809898c007416b>`
	#define :target:`WEEKDAY_SUN<doxid-group__libccc__sys__time_1ga9e099157f37c6311affe907182f2b369>`
	#define :target:`WEEKDAY_THU<doxid-group__libccc__sys__time_1ga6227634d1fd7ef18d50eb113e1dd3af2>`
	#define :target:`WEEKDAY_TUE<doxid-group__libccc__sys__time_1ga200846cdb96c5834099e82804835495a>`
	#define :target:`WEEKDAY_WED<doxid-group__libccc__sys__time_1ga3cddbeb711c05fb984faba550b4c0c49>`
	#define :target:`c_date<doxid-group__libccc__sys__time_1gaffee81970cf900a25a9252e88d758660>`
	#define :target:`c_date_format<doxid-group__libccc__sys__time_1gaed3084aad516f3f69aed51623243fad6>`
	#define :target:`c_date_format_n<doxid-group__libccc__sys__time_1ga0791e0cc1ac73f34e1a7555b49693dab>`
	#define :target:`c_date_now<doxid-group__libccc__sys__time_1ga0360e62205ddb09e525286f7a75e9691>`
	#define :target:`c_date_parse<doxid-group__libccc__sys__time_1ga2592d56736674accdc127005a8d15a94>`
	#define :target:`c_date_to_stdc<doxid-group__libccc__sys__time_1ga7d3e63ee7f2845eeacc1e27c5eef5bcf>`
	#define :target:`c_date_to_time<doxid-group__libccc__sys__time_1ga5d4c117ff0dfbe6ebaa2a23b6e3d4d65>`
	#define :target:`c_date_to_time_local<doxid-group__libccc__sys__time_1gae8bb2bd00e913c84f3f7214e4df61d31>`
	#define :target:`c_date_to_time_utc<doxid-group__libccc__sys__time_1ga79d1ab3e627d340e4e79e2d2380ba559>`
	#define :target:`c_date_tzset<doxid-group__libccc__sys__time_1ga732137fc55236097e3f07248219faf51>`
	#define :target:`c_stdc_to_date<doxid-group__libccc__sys__time_1ga7dce551729fce42e5e10e1538863b20d>`
	#define :target:`c_stdc_to_timespec<doxid-group__libccc__sys__time_1gac58a4b845ed592d47eea8ebae41b373f>`
	#define :target:`c_strftime<doxid-group__libccc__sys__time_1gafe5c04a1300cd9fc46936f28212a9eb9>`
	#define :target:`c_strptime<doxid-group__libccc__sys__time_1ga619b9cdfda6b778d795c3680237c21ff>`
	#define :target:`c_time<doxid-group__libccc__sys__time_1ga63b4590db5463149715523abae8d102b>`
	#define :target:`c_time_now<doxid-group__libccc__sys__time_1ga7e36ea6ed0da787fbafecead43d6b536>`
	#define :target:`c_time_to_date<doxid-group__libccc__sys__time_1ga7f3e0fc957a79ed49d3227d49d89f5a7>`
	#define :target:`c_time_to_date_local<doxid-group__libccc__sys__time_1ga8a18bcc319ec2590e82dd8f6a7f34f6f>`
	#define :target:`c_time_to_date_utc<doxid-group__libccc__sys__time_1ga47ffa323a3db8cbee54911dde9f96934>`
	#define :target:`c_time_tzset<doxid-group__libccc__sys__time_1ga31564ce92d5010cae41c4a9ce8d071cd>`
	#define :target:`c_timespec_to_stdc<doxid-group__libccc__sys__time_1gaf737de37d14bc804b436cfbc1909d8b8>`

.. _details-group__libccc__sys__time:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This header defines all the functions for date & time related functions.

Typedefs
--------

.. index:: pair: typedef; t_time
.. _doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef time_t t_time

The standard type used to represent a date+time (smallest unit is seconds)

This type stores integer standard UNIX epoch time, so that means that a value of zero corresponds to midnight (00:00:00), January 1, 1970, UTC (Coordinated Universal Time)

.. index:: pair: typedef; s_timespec
.. _doxid-group__libccc__sys__time_1ga15573304fdba9fa8f6f0046887c8fd5c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct :ref:`s_timespec_<doxid-structs__timespec__>` s_timespec

This struct is used to store a precise, arbitrary timestamp (smallest unit is nanoseconds)

This 'timespec' has an arbitrary begin point (typically the start of program execution, but it can be the last machine boot, among many other things). It is meant to be used measure intervals of time during program execution, by calling the 'clock()' function several times and comparing their outputs.

This struct is equivalent to the ISO C library's 'struct timespec', although it's sub-fields have different names: tv_sec -> sec tv_nsec -> nanosec

.. index:: pair: typedef; e_weekday
.. _doxid-group__libccc__sys__time_1gadf660d127ff6a2087b5b40212d894ec6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef enum :ref:`e_weekday_<doxid-group__libccc__sys__time_1gac389255cf85a435a3d026e8a83309153>` e_weekday

This enum lists each day of the week, Sunday counting as zero.

.. index:: pair: typedef; e_month
.. _doxid-group__libccc__sys__time_1gabfbaef83dda6b8027691e3c77484cf60:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef enum :ref:`e_month_<doxid-group__libccc__sys__time_1gab0619a9b3d5c8e9792ef82deab1b4075>` e_month

This enum lists each month of the year, January counting as zero.

.. index:: pair: typedef; t_timezone
.. _doxid-group__libccc__sys__time_1ga27d157f4fc1761ff865663ec41bc6945:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef :ref:`t_sint<doxid-group__libccc__int_1gad9b833ec2906279e4f479df31778732a>` t_timezone

This signed int represents a timezone difference (in seconds)

This signed int is based on the UTC time system - it expresses a time difference, in seconds. The idea is to notate timezones in the commonly accepted UTC format (eg: UTC+01, UTC-06, etc) There are several defines below that are meant to be used within this type:



.. rubric:: See also:

:ref:`TIMEZONE_GMT <doxid-group__libccc__sys__time_1ga510b070f8bc82bf24371c5b452904425>`, :ref:`TIMEZONE_EST <doxid-group__libccc__sys__time_1ga65c08746b86898b7790f4fb153466fe9>`, :ref:`TIMEZONE_CST <doxid-group__libccc__sys__time_1gad168fc658960a6ada24a0ea47d854418>`, :ref:`TIMEZONE_MST <doxid-group__libccc__sys__time_1ga998ff23a82ebd2843797e7c99de745f8>`, :ref:`TIMEZONE_PST <doxid-group__libccc__sys__time_1gaf93fbb2121097f5e803f167c3570aef4>`, :ref:`TIMEZONE_EDT <doxid-group__libccc__sys__time_1ga8a227e41f4ed3e39bf72565e37a7be46>`, :ref:`TIMEZONE_CDT <doxid-group__libccc__sys__time_1ga9a037e8e94048101e4588129cdddc01a>`, :ref:`TIMEZONE_MDT <doxid-group__libccc__sys__time_1gaf13155bfc343d9ed5ca39be4a4f1caca>`, :ref:`TIMEZONE_PDT <doxid-group__libccc__sys__time_1gab41154013703d1af31793e59be995091>`,

.. index:: pair: typedef; s_date
.. _doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef struct :ref:`s_date_<doxid-structs__date__>` s_date

This struct is used to store all aspects about a certain date/time (equivalent to 'struct tm')

This struct is equivalent to the ISO C library's 'struct tm', although it's sub-fields have different names: tm_sec -> sec tm_min -> min tm_hour -> hour tm_mday -> day_month tm_mon -> month tm_year -> year tm_wday -> day_week tm_yday -> day_year tm_isdst -> is_dst NB: This struct does not store timezone information, there are conversion functions for that:



.. rubric:: See also:

Time_To_Date_Timezone, Date_To_Time_Timezone

Global Variables
----------------

.. index:: pair: variable; g_weekday
.. _doxid-group__libccc__sys__time_1ga0ba1c91deb3da42db89b6d86ed4411f6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char const*const g_weekday[ENUMLENGTH_WEEKDAY]

This global constant stores all the string names of the WEEKDAY enum, in lowercase.

.. index:: pair: variable; g_weekday_abbreviated
.. _doxid-group__libccc__sys__time_1gada53cfe21fed2fac2cad871b86c40241:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char const*const g_weekday_abbreviated[ENUMLENGTH_WEEKDAY]

This global constant stores all the string names of the WEEKDAY enum, abbreviated to 3 letters.

.. index:: pair: variable; g_month
.. _doxid-group__libccc__sys__time_1ga11267d04f29a1e875268e816953de2e6:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char const*const g_month[ENUMLENGTH_MONTH]

This global constant stores all the string names of the MONTH enum, in lowercase.

.. index:: pair: variable; g_month_abbreviated
.. _doxid-group__libccc__sys__time_1ga08cfd3d67f32b4ed901ed8225139b9fb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char const*const g_month_abbreviated[ENUMLENGTH_MONTH]

This global constant stores all the string names of the MONTH enum, abbreviated to 3 letters.

Global Functions
----------------

.. index:: pair: function; Time_Now
.. _doxid-group__libccc__sys__time_1ga5f5cf2ae075289ff0f22bc533785a7ca:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_time<doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca>` Time_Now(void)

Returns the current UTC timestamp, according to the system clock.

.. index:: pair: function; Time_ToDate_UTC
.. _doxid-group__libccc__sys__time_1ga695e40e057e2a877ade56c3aa601bb15:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` Time_ToDate_UTC(:ref:`t_time<doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca>` const value)

Converts the given 't_time value' to its equivalent 's_date' representation (in UTC)

.. index:: pair: function; Time_ToDate_LocalTime
.. _doxid-group__libccc__sys__time_1ga775b9662f2491a887d3bd323232f0a61:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` Time_ToDate_LocalTime(:ref:`t_time<doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca>` const value)

Converts the given 't_time value' to its equivalent 's_date' representation (according to the system timezone)

.. index:: pair: function; Timespec_ToSTDC
.. _doxid-group__libccc__sys__time_1gadf0cb090ab0c4c98125e0aabb622a944:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	struct timespec Timespec_ToSTDC(:ref:`s_timespec<doxid-group__libccc__sys__time_1ga15573304fdba9fa8f6f0046887c8fd5c>` const* value)

Converts the given 's_date' struct to its ISO STD LIBC 'struct tm' equivalent.

.. index:: pair: function; Timespec_FromSTDC
.. _doxid-group__libccc__sys__time_1gadeecf7a946c7b63a9188b06876073381:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`s_timespec<doxid-group__libccc__sys__time_1ga15573304fdba9fa8f6f0046887c8fd5c>` Timespec_FromSTDC(struct timespec const* value)

Converts the given ISO STD LIBC 'struct tm' to its 's_date' struct equivalent.

.. index:: pair: function; Time_SetTimezone
.. _doxid-group__libccc__sys__time_1ga5be9da6d4842ea46c1714d017d906c82:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_time<doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca>` Time_SetTimezone(:ref:`t_time<doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca>` value, :ref:`t_timezone<doxid-group__libccc__sys__time_1ga27d157f4fc1761ff865663ec41bc6945>` old, :ref:`t_timezone<doxid-group__libccc__sys__time_1ga27d157f4fc1761ff865663ec41bc6945>` new)

Returns the value of the given 't_time value', updating the timezone offset from 'old' to 'new'.

.. index:: pair: function; Date_SetTimezone
.. _doxid-group__libccc__sys__time_1ga8fe171c183c6be39f24736368e09cb9d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` Date_SetTimezone(:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` const* value, :ref:`t_timezone<doxid-group__libccc__sys__time_1ga27d157f4fc1761ff865663ec41bc6945>` old, :ref:`t_timezone<doxid-group__libccc__sys__time_1ga27d157f4fc1761ff865663ec41bc6945>` new)

Returns the value of the given 't_time value', updating the timezone offset from 'old' to 'new'.

.. index:: pair: function; Date_Now
.. _doxid-group__libccc__sys__time_1ga847f2c5faa65c35636363158531b8528:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` Date_Now(void)

Returns the current UTC timestamp, according to the system clock.

.. index:: pair: function; Date_FromString
.. _doxid-group__libccc__sys__time_1ga9491e5baedba6b92fe8d713b85b25b00:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` Date_FromString(char const* str, char const* format)

Parses the given string representation of a date/time, and returns the resulting 's_date' struct.

.. index:: pair: function; Date_ToString
.. _doxid-group__libccc__sys__time_1gab8a20bcd00022df7a08c69de3279ad4d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* Date_ToString(:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` const* date, char const* format)

Creates a string representation of the given 'date', according to the given 'format' string.

This function works similarly to the strftime() function from ' ``time.h`` ' STDC header It is closer to 'asprintf()' as well, making for a rather easy-to-use equivalent to strftime(). That being said, it is probably better to use Date_String_Format_N for machines with little RAM.

.. index:: pair: function; Date_ToString_N
.. _doxid-group__libccc__sys__time_1gae693d0c139e7cc8d860630e314cf0dcb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_size<doxid-group__libccc__pointer_1gab26ea4b5e8504781be1c368c28967472>` Date_ToString_N(char* dest, :ref:`t_size<doxid-group__libccc__pointer_1gab26ea4b5e8504781be1c368c28967472>` max, :ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` const* date, char const* format)



.. rubric:: See also:

:ref:`Date_ToString <doxid-group__libccc__sys__time_1gab8a20bcd00022df7a08c69de3279ad4d>`

.. index:: pair: function; Date_ToTime_UTC
.. _doxid-group__libccc__sys__time_1ga1996220f5778c6014377c4735fab4505:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_time<doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca>` Date_ToTime_UTC(:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` const* value)

Converts the given 's_date value' to its equivalent 't_time' representation (in UTC)

.. index:: pair: function; Date_ToTime_LocalTime
.. _doxid-group__libccc__sys__time_1ga4a8152db78789abd2936b24e5f17d29c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_time<doxid-group__libccc__sys__time_1gac18942bf2f3dc9acba993dd65cca3aca>` Date_ToTime_LocalTime(:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` const* value)

Converts the given 's_date value' to its equivalent 't_time' representation (according to the system timezone)

.. index:: pair: function; Date_ToSTDC
.. _doxid-group__libccc__sys__time_1ga519ca62fd4714ff42c2d2856028d9f48:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	struct tm Date_ToSTDC(:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` const* date)

Converts the given 's_date' struct to its ISO STD LIBC 'struct tm' equivalent.

.. index:: pair: function; Date_FromSTDC
.. _doxid-group__libccc__sys__time_1ga80cb2a3053c151d53fe94abdb4ee37a5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`s_date<doxid-group__libccc__sys__time_1gab24b14ff6895e68d175d7dbd3da1cae9>` Date_FromSTDC(struct tm const* value)

Converts the given ISO STD LIBC 'struct tm' to its 's_date' struct equivalent.

Macros
------

.. index:: pair: define; FORMAT_DATE_DMY
.. _doxid-group__libccc__sys__time_1ga7272e57f24979a90aa8ead70d668513c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define FORMAT_DATE_DMY

:ref:`Date_ToString() <doxid-group__libccc__sys__time_1gab8a20bcd00022df7a08c69de3279ad4d>` date format: DD/MM/YYYY -> 31/12/2020

.. index:: pair: define; FORMAT_DATE_MDY
.. _doxid-group__libccc__sys__time_1ga57e4b87e4c5a204c6f1e1ebb5c1a2a74:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define FORMAT_DATE_MDY

:ref:`Date_ToString() <doxid-group__libccc__sys__time_1gab8a20bcd00022df7a08c69de3279ad4d>` date format: MM/DD/YYYY -> 12/31/2020

.. index:: pair: define; FORMAT_DATE_UNIX
.. _doxid-group__libccc__sys__time_1gaed0ce332931606fe43ff6fb2af39fd69:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define FORMAT_DATE_UNIX

:ref:`Date_ToString() <doxid-group__libccc__sys__time_1gab8a20bcd00022df7a08c69de3279ad4d>` date format: YYYY-MM-DD -> 2020-12-31

.. index:: pair: define; FORMAT_DATE_YMD
.. _doxid-group__libccc__sys__time_1gadd11712bbc61abf0d20958cfaace408e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define FORMAT_DATE_YMD

:ref:`Date_ToString() <doxid-group__libccc__sys__time_1gab8a20bcd00022df7a08c69de3279ad4d>` date format: YYYY/MM/DD -> 2020/12/31

.. index:: pair: define; FORMAT_TIME_PRIME
.. _doxid-group__libccc__sys__time_1gaba3c62a8515922fcd0fe8dbc11096b72:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define FORMAT_TIME_PRIME

:ref:`Date_ToString() <doxid-group__libccc__sys__time_1gab8a20bcd00022df7a08c69de3279ad4d>` date format: hhhmm'ss" -> 11h59'59"

.. index:: pair: define; FORMAT_TIME_UNIX
.. _doxid-group__libccc__sys__time_1ga73482b8ca273eb61616e4c5ab37a3f99:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define FORMAT_TIME_UNIX

:ref:`Date_ToString() <doxid-group__libccc__sys__time_1gab8a20bcd00022df7a08c69de3279ad4d>` date format: hh:mm:ss -> 11:59:59

.. index:: pair: define; TIMEZONE_CDT
.. _doxid-group__libccc__sys__time_1ga9a037e8e94048101e4588129cdddc01a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIMEZONE_CDT

Timezone (UTC-05): North American Central Daylight Time.

.. index:: pair: define; TIMEZONE_CST
.. _doxid-group__libccc__sys__time_1gad168fc658960a6ada24a0ea47d854418:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIMEZONE_CST

Timezone (UTC-06): North American Central Standard Time.

.. index:: pair: define; TIMEZONE_EDT
.. _doxid-group__libccc__sys__time_1ga8a227e41f4ed3e39bf72565e37a7be46:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIMEZONE_EDT

Timezone (UTC-04): North American Eastern Daylight Time.

.. index:: pair: define; TIMEZONE_EST
.. _doxid-group__libccc__sys__time_1ga65c08746b86898b7790f4fb153466fe9:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIMEZONE_EST

Timezone (UTC-05): North American Eastern Standard Time.

.. index:: pair: define; TIMEZONE_GMT
.. _doxid-group__libccc__sys__time_1ga510b070f8bc82bf24371c5b452904425:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIMEZONE_GMT

Timezone (UTC 00): Greenwich Mean Time (same as UTC)

.. index:: pair: define; TIMEZONE_MDT
.. _doxid-group__libccc__sys__time_1gaf13155bfc343d9ed5ca39be4a4f1caca:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIMEZONE_MDT

Timezone (UTC-06): North American Mountain Daylight Time.

.. index:: pair: define; TIMEZONE_MST
.. _doxid-group__libccc__sys__time_1ga998ff23a82ebd2843797e7c99de745f8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIMEZONE_MST

Timezone (UTC-07): North American Mountain Standard Time.

.. index:: pair: define; TIMEZONE_PDT
.. _doxid-group__libccc__sys__time_1gab41154013703d1af31793e59be995091:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIMEZONE_PDT

Timezone (UTC-07): North American Pacific Daylight Time.

.. index:: pair: define; TIMEZONE_PST
.. _doxid-group__libccc__sys__time_1gaf93fbb2121097f5e803f167c3570aef4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIMEZONE_PST

Timezone (UTC-08): North American Pacific Standard Time.

.. index:: pair: define; TIMEZONE_UTC
.. _doxid-group__libccc__sys__time_1ga5903b2a2c67e39bf10621cf06d40bc7f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIMEZONE_UTC(X)

Timezone (UTC 00): Universal Coordinated Time (same as GMT)

.. index:: pair: define; TIMEZONE_UTCMAX
.. _doxid-group__libccc__sys__time_1ga3cdaafd44ef25c126fbf6df3c91fb47b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIMEZONE_UTCMAX

Timezone (UTC+12): The maximum UTC timezone (most early)

.. index:: pair: define; TIMEZONE_UTCMIN
.. _doxid-group__libccc__sys__time_1gaeeb59626164e1b4b03b00b6b634ab8f0:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIMEZONE_UTCMIN

Timezone (UTC-12): The minimum UTC timezone (most late)

.. index:: pair: define; TIME_MAX_DAYS_MONTH
.. _doxid-group__libccc__sys__time_1ga7d0966e83897b110a4268f93fecd6d65:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIME_MAX_DAYS_MONTH

The amount of days in a month.

.. index:: pair: define; TIME_MAX_DAYS_YEAR
.. _doxid-group__libccc__sys__time_1ga7aadda422ceafd660a39db68a9b5e33c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIME_MAX_DAYS_YEAR

The amount of days in a year.

.. index:: pair: define; TIME_MAX_HOURS
.. _doxid-group__libccc__sys__time_1ga8c7938426d1ca5f4df51c2e51686d12d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIME_MAX_HOURS

The amount of hours in a day.

.. index:: pair: define; TIME_MAX_LEAP_DAYS_YEAR
.. _doxid-group__libccc__sys__time_1ga5f3e5803af9054e5e7b0d87623d8cb55:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIME_MAX_LEAP_DAYS_YEAR

The amount of days in a year (when accounting for leap 4 years)

.. index:: pair: define; TIME_MAX_LEAP_SECONDS
.. _doxid-group__libccc__sys__time_1ga332b2d6e7d706faa08fbd558c41dbfd5:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIME_MAX_LEAP_SECONDS

The amount of seconds in a minute (accounting for leap seconds)

.. index:: pair: define; TIME_MAX_MINUTES
.. _doxid-group__libccc__sys__time_1ga2a1fc19918bce8a077c28378586e5f03:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIME_MAX_MINUTES

The amount of minutes in an hour.

.. index:: pair: define; TIME_MAX_SECONDS
.. _doxid-group__libccc__sys__time_1ga9a0709759eb749dab54cb48dc049b26c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define TIME_MAX_SECONDS

The amount of seconds in a minute.

