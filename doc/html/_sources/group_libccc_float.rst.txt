.. index:: pair: group; 04) libccc/float
.. _doxid-group__libccc__float:

04) libccc/float
================

.. toctree::
	:hidden:

	union_u_float_cast_.rst
	union_u_varfloat_.rst

Overview
~~~~~~~~

This header defines the floating-point number primitive types and functions. :ref:`More...<details-group__libccc__float>`


.. ref-code-block:: cpp
	:class: doxyrest-overview-code-block

	
	// typedefs

	typedef float :ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>`;
	typedef double :ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>`;
	typedef LIBCONFIG_TYPE_FLOAT :ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>`;
	typedef union :ref:`u_float_cast_<doxid-unionu__float__cast__>` :ref:`u_float_cast<doxid-group__libccc__float_1gab086f30c0781d00400bbabc35acd9324>`;
	typedef union :ref:`u_varfloat_<doxid-unionu__varfloat__>` :ref:`u_varfloat<doxid-group__libccc__float_1gae531852f0f4695a3061dde0a6363e1dd>`;

	// unions

	union :ref:`u_float_cast_<doxid-unionu__float__cast__>`;
	union :ref:`u_varfloat_<doxid-unionu__varfloat__>`;

	// global functions

	char* :ref:`F32_ToString<doxid-group__libccc__float_1gad285a552101998d9cfc6947b8c46c653>`(:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` n, t_u8 precision);
	char* :ref:`F64_ToString<doxid-group__libccc__float_1ga115c8d4b7b00be6e070789d4e70cb8d4>`(:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` n, t_u8 precision);
	char* :ref:`Float_ToString<doxid-group__libccc__float_1ga87bde4addaacf45f38f59f8bef943a61>`(:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` n, t_u8 precision);
	char* :ref:`F32_ToString_Exp<doxid-group__libccc__float_1gaca2fb8d966204b8201dffdf3f62f4341>`(:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` n, t_u8 precision);
	char* :ref:`F64_ToString_Exp<doxid-group__libccc__float_1gae009d20a0fe47434c66b4fc38409aa2d>`(:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` n, t_u8 precision);
	char* :ref:`Float_ToString_Exp<doxid-group__libccc__float_1ga497200b202212a20de1ab032645ff226>`(:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` n, t_u8 precision);
	char* :ref:`F32_ToString_Dec<doxid-group__libccc__float_1ga3f049f04e53bc49c374551470b71b49e>`(:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` n, t_u8 precision);
	char* :ref:`F64_ToString_Dec<doxid-group__libccc__float_1gad911e6786d0dd0bb60af18930a911b19>`(:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` n, t_u8 precision);
	char* :ref:`Float_ToString_Dec<doxid-group__libccc__float_1gaab728c5c49d0e4ed34b28c0dea3c8a10>`(:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` n, t_u8 precision);
	char* :ref:`F32_ToString_Hex<doxid-group__libccc__float_1ga6fc6e17184ab26df21a9dd27522cf7d2>`(:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` n, t_u8 precision);
	char* :ref:`F64_ToString_Hex<doxid-group__libccc__float_1gaf25ba75ca79c425d7447cb7af730aa4d>`(:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` n, t_u8 precision);
	char* :ref:`Float_ToString_Hex<doxid-group__libccc__float_1ga98802d3e8507d3ec38c08342553cdc0e>`(:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` n, t_u8 precision);
	char* :ref:`F32_ToString_Bin<doxid-group__libccc__float_1ga5d6f31b911f15179082f23dda906bb4d>`(:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` n, t_u8 precision);
	char* :ref:`F64_ToString_Bin<doxid-group__libccc__float_1ga64e0f85dc01cc33acfdd301b4408b67c>`(:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` n, t_u8 precision);
	char* :ref:`Float_ToString_Bin<doxid-group__libccc__float_1ga3b00540515f59af7586ce4695d561dfb>`(:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` n, t_u8 precision);
	:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` :ref:`F32_FromString<doxid-group__libccc__float_1ga0be1e9638f033d075c4e5694d9191178>`(char const* str);
	:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` :ref:`F64_FromString<doxid-group__libccc__float_1ga0463f0ec8669cef3f4ef691a24036387>`(char const* str);
	:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` :ref:`Float_FromString<doxid-group__libccc__float_1gabcc2930d58a7d6b8eadccfe716ade69a>`(char const* str);
	:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` :ref:`F32_FromString_Exp<doxid-group__libccc__float_1ga0156271554be84ef2f58cbcd0000c7b2>`(char const* str);
	:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` :ref:`F64_FromString_Exp<doxid-group__libccc__float_1ga782f27c0936218883d2a5d5a798d27d2>`(char const* str);
	:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` :ref:`Float_FromString_Exp<doxid-group__libccc__float_1gac4792358fffb4a2e651930e8a6766c33>`(char const* str);
	:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` :ref:`F32_FromString_Dec<doxid-group__libccc__float_1gab64782f5291512cec672686d51fdca5e>`(char const* str);
	:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` :ref:`F64_FromString_Dec<doxid-group__libccc__float_1ga37435393a52545e5c59d82b5f96c0d8f>`(char const* str);
	:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` :ref:`Float_FromString_Dec<doxid-group__libccc__float_1ga1b24e43778a287b27fb6571c0277e6ad>`(char const* str);
	:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` :ref:`F32_FromString_Hex<doxid-group__libccc__float_1ga9156140d044787e16e47a90925f69cd7>`(char const* str);
	:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` :ref:`F64_FromString_Hex<doxid-group__libccc__float_1ga6b55470671b8ef443ed1da5e4afb8c57>`(char const* str);
	:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` :ref:`Float_FromString_Hex<doxid-group__libccc__float_1ga1a915a261ff324b5214314781458c1a1>`(char const* str);
	:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` :ref:`F32_FromString_Bin<doxid-group__libccc__float_1ga5c352be5e5ff346eac2a7b04105de807>`(char const* str);
	:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` :ref:`F64_FromString_Bin<doxid-group__libccc__float_1ga6dac270fe954a0226ac47466f9d98df1>`(char const* str);
	:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` :ref:`Float_FromString_Bin<doxid-group__libccc__float_1gaa4090cc6374aae80574f220d569c6213>`(char const* str);

	// macros

	#define :ref:`F128_EXPONENT<doxid-group__libccc__float_1gadc9b1c869833b31fea877ade10d6239c>`
	#define :ref:`F128_EXPONENT_BIAS<doxid-group__libccc__float_1ga81d2a5ce44c433a2ceecefca4a2de08b>`
	#define :ref:`F128_EXPONENT_BITS<doxid-group__libccc__float_1gad7a0f59b4868523a6fedb902e1504cfd>`
	#define :ref:`F128_EXPONENT_ZERO<doxid-group__libccc__float_1ga91f7727aca5c556c5f0a365a1bdb721a>`
	#define :ref:`F128_INIT_VALUE<doxid-group__libccc__float_1ga7f6fd41f1f033300cba702f96c4d2d4b>`
	#define :ref:`F128_MANTISSA<doxid-group__libccc__float_1ga7bb56169aeb699ceed610fbfa3944291>`
	#define :ref:`F128_MANTISSA_BITS<doxid-group__libccc__float_1ga2a5e09a9be518c66810b9d790acea175>`
	#define :ref:`F128_MANTISSA_SIGNED<doxid-group__libccc__float_1gae3e8cfada14735b3e598e639359843cc>`
	#define :ref:`F128_SIGNED<doxid-group__libccc__float_1gad2585244df8cc4a2417d3616baa1cc7c>`
	#define :ref:`F32_EXPONENT<doxid-group__libccc__float_1ga45455f08229e3030c23cf964b6dd21af>`
	#define :ref:`F32_EXPONENT_BIAS<doxid-group__libccc__float_1gaff4f94f02402a07e84f3d4604e47265d>`
	#define :ref:`F32_EXPONENT_BITS<doxid-group__libccc__float_1ga5845049b2216118b5df6bef29a6da7fb>`
	#define :ref:`F32_EXPONENT_ZERO<doxid-group__libccc__float_1ga459ccfba917ec2fbf69a9e20d064a1b4>`
	#define :target:`F32_FromString_Binary<doxid-group__libccc__float_1ga803d035a9a6b37d853b938001bb34cf6>`
	#define :target:`F32_FromString_Decimal<doxid-group__libccc__float_1ga5e80f6cc6062a967036c6df93fdfc363>`
	#define :target:`F32_FromString_Exponential<doxid-group__libccc__float_1ga14f2dfb64eaf64f5e0d0b13e1aea4c10>`
	#define :target:`F32_FromString_Hexadecimal<doxid-group__libccc__float_1ga1797f918f4fa72be9a978da6064d0f50>`
	#define :target:`F32_FromString_Sci<doxid-group__libccc__float_1ga42cc4bc1e7dbb602039a49c972a2f42e>`
	#define :target:`F32_FromString_Scientific<doxid-group__libccc__float_1ga58458879599a426e49666fd8921c0ee5>`
	#define :ref:`F32_INIT_VALUE<doxid-group__libccc__float_1gac7093f0da3fd49fefdc63ca99f0ef506>`
	#define :ref:`F32_MANTISSA<doxid-group__libccc__float_1ga84c366a82d97e2694c8c060a00605458>`
	#define :ref:`F32_MANTISSA_BITS<doxid-group__libccc__float_1gafc21584309956692a5a5286d056e9650>`
	#define :ref:`F32_MANTISSA_SIGNED<doxid-group__libccc__float_1gae76962643a878de58c4cd2248dd43b7d>`
	#define :ref:`F32_SIGNED<doxid-group__libccc__float_1gab68073391b4d1885aed3ef5f97a778ee>`
	#define :target:`F32_ToString_Binary<doxid-group__libccc__float_1ga73581e622aa5e9b8724f357bfb59d9ad>`
	#define :target:`F32_ToString_Decimal<doxid-group__libccc__float_1ga82df50a5eb8fdfa907b1e79ab131743d>`
	#define :target:`F32_ToString_Exponential<doxid-group__libccc__float_1ga45150e2f3652e4acbd3c59b36f9bafaf>`
	#define :target:`F32_ToString_Hexadecimal<doxid-group__libccc__float_1ga340db251b85a750f02a560e355e356da>`
	#define :target:`F32_ToString_Sci<doxid-group__libccc__float_1gae93447e8d05b956108e987fa24ce3bb8>`
	#define :target:`F32_ToString_Scientific<doxid-group__libccc__float_1ga22f20d9b0130ae8edb1f24cde21a2510>`
	#define :ref:`F64_EXPONENT<doxid-group__libccc__float_1gab40d0a715ec4b6ce1a5cf26cf8499705>`
	#define :ref:`F64_EXPONENT_BIAS<doxid-group__libccc__float_1ga59da18fad691074444fe07da93f07bbf>`
	#define :ref:`F64_EXPONENT_BITS<doxid-group__libccc__float_1ga654d00f825520eabd83f0f4c09071b97>`
	#define :ref:`F64_EXPONENT_ZERO<doxid-group__libccc__float_1gaee4aac42f0dbefe36ecaa8db3caccf79>`
	#define :target:`F64_FromString_Binary<doxid-group__libccc__float_1ga4232f2101ad99a19d83d73f714032e40>`
	#define :target:`F64_FromString_Decimal<doxid-group__libccc__float_1gaa96532d785891efbdb4b4ce97c8d1e23>`
	#define :target:`F64_FromString_Exponential<doxid-group__libccc__float_1ga0070c72b264f3a0a216743c268f52407>`
	#define :target:`F64_FromString_Hexadecimal<doxid-group__libccc__float_1gab6fc85c09418b7ae20e58afa745f3cc0>`
	#define :target:`F64_FromString_Sci<doxid-group__libccc__float_1gab9515fcae54561e7415769fd4752ffce>`
	#define :target:`F64_FromString_Scientific<doxid-group__libccc__float_1gabd696006ab02e2a7fbcd9990bce79dab>`
	#define :ref:`F64_INIT_VALUE<doxid-group__libccc__float_1gac1356252683f2585dc62bd892194c39c>`
	#define :ref:`F64_MANTISSA<doxid-group__libccc__float_1gaa46e75d8630c52a727b9c2c81087ebe2>`
	#define :ref:`F64_MANTISSA_BITS<doxid-group__libccc__float_1ga7d97beb92dd86d6bcaef34f8ef6adc64>`
	#define :ref:`F64_MANTISSA_SIGNED<doxid-group__libccc__float_1ga91f7fb5fab1a39ac561f6ca8684c1aa4>`
	#define :ref:`F64_SIGNED<doxid-group__libccc__float_1gaac4617a7c49336b2819f5e12d071d863>`
	#define :target:`F64_ToString_Binary<doxid-group__libccc__float_1ga4bc36b9656ee3000d2c3f033dde45ed5>`
	#define :target:`F64_ToString_Decimal<doxid-group__libccc__float_1gaddaf12d4675813dac754ff8ed5db14a2>`
	#define :target:`F64_ToString_Exponential<doxid-group__libccc__float_1ga7602bdcd1a64f9ef1f63d075f6a016e9>`
	#define :target:`F64_ToString_Hexadecimal<doxid-group__libccc__float_1gadfd7ed7581706ce99f352cad51823dda>`
	#define :target:`F64_ToString_Sci<doxid-group__libccc__float_1ga191f9a03e3e65e952267685910113078>`
	#define :target:`F64_ToString_Scientific<doxid-group__libccc__float_1ga5a748e34db8cae867b7096e8add81b9e>`
	#define :ref:`F80_EXPONENT<doxid-group__libccc__float_1gacdcb853bc15209e5072c4213a367e503>`
	#define :ref:`F80_EXPONENT_BIAS<doxid-group__libccc__float_1ga67cef136ae4751d4b1e2e34fa49ddf4d>`
	#define :ref:`F80_EXPONENT_BITS<doxid-group__libccc__float_1gad55bcdeae34b3e526b102e0284a4bb58>`
	#define :ref:`F80_EXPONENT_ZERO<doxid-group__libccc__float_1ga28a155e3fdbe71a9843ce02d1c06402b>`
	#define :ref:`F80_INIT_VALUE<doxid-group__libccc__float_1ga6362eb2db4233ca34e7a73e2ead58a60>`
	#define :ref:`F80_MANTISSA<doxid-group__libccc__float_1ga06cd90e1b5b74385e88ac419f04e989e>`
	#define :ref:`F80_MANTISSA_BITS<doxid-group__libccc__float_1ga0447bd3864f694362db253d6c069260d>`
	#define :ref:`F80_MANTISSA_SIGNED<doxid-group__libccc__float_1ga3ac651588bba97e6ef288d84ec80bdae>`
	#define :ref:`F80_SIGNED<doxid-group__libccc__float_1ga6c3805905f3280747ad499500733141f>`
	#define :ref:`FLOAT_BIAS<doxid-group__libccc__float_1gaa54c9c63358c14cd4837e092f541bdac>`
	#define :target:`FLOAT_EXPONENT<doxid-group__libccc__float_1ga7a3ae2014c6e5a6cfb81a6b2688e3eb6>`
	#define :target:`FLOAT_EXPONENT_BIAS<doxid-group__libccc__float_1gad5d7f2514ec4fedb740aae1027ef3494>`
	#define :target:`FLOAT_EXPONENT_BITS<doxid-group__libccc__float_1gad45ad7d46f6c5149d681ba33ad8a2d4c>`
	#define :target:`FLOAT_EXPONENT_ZERO<doxid-group__libccc__float_1gac9c6d099a7f38dcbd78cdf862e0cdb06>`
	#define :target:`FLOAT_INIT_VALUE<doxid-group__libccc__float_1gab52abd8ab7aedb33be8562223e680524>`
	#define :target:`FLOAT_MANTISSA<doxid-group__libccc__float_1ga136fab482d9382c23beb0314ccc21f72>`
	#define :target:`FLOAT_MANTISSA_BITS<doxid-group__libccc__float_1ga723fe972c074e2be5692a23dd7401709>`
	#define :target:`FLOAT_MANTISSA_SIGNED<doxid-group__libccc__float_1ga391ca28748f713405b0da8b36007acd3>`
	#define :target:`FLOAT_SIGNED<doxid-group__libccc__float_1gaaca925756ed2b953f5503f193f6b4184>`
	#define :ref:`FLOAT_THRESHOLD_HUGE<doxid-group__libccc__float_1ga381da602a823f0ad88c57d4c6a127368>`
	#define :ref:`FLOAT_THRESHOLD_TINY<doxid-group__libccc__float_1ga5ed20a03af8dfc3ef1fb2df54e2ebe89>`
	#define :target:`Float_FromString_Binary<doxid-group__libccc__float_1ga3eac845f9567f00d5efb8d5703820a78>`
	#define :target:`Float_FromString_Decimal<doxid-group__libccc__float_1ga45657039273f45a579a4770aa12ceaf2>`
	#define :target:`Float_FromString_Exponential<doxid-group__libccc__float_1gaeaa8aca3579b6d71c0669330ebd1e27c>`
	#define :target:`Float_FromString_Hexadecimal<doxid-group__libccc__float_1ga603626e3e17c6304e5623ed4657e2b91>`
	#define :target:`Float_FromString_Sci<doxid-group__libccc__float_1ga73bce2b99ea8d95184523ac329083ebb>`
	#define :target:`Float_FromString_Scientific<doxid-group__libccc__float_1ga50b99b82275ff097874ebe8bd7b34a7e>`
	#define :target:`Float_ToString_Binary<doxid-group__libccc__float_1ga7166d7077200152d982bb80a6f7e52e1>`
	#define :target:`Float_ToString_Decimal<doxid-group__libccc__float_1gaf7a06dc2223ebbf13d947c5e83b78e74>`
	#define :target:`Float_ToString_Exponential<doxid-group__libccc__float_1gaaac86afa7aea537ea01e3ac64e5390a6>`
	#define :target:`Float_ToString_Hexadecimal<doxid-group__libccc__float_1ga86ca69c1c33d507487c7a02cd7eea0dd>`
	#define :target:`Float_ToString_Sci<doxid-group__libccc__float_1ga50fc9aac9ae55ce6c182babfae9e2541>`
	#define :target:`Float_ToString_Scientific<doxid-group__libccc__float_1gada04b7cefa88cd1c751badbed24f39bc>`
	#define :target:`INF<doxid-group__libccc__float_1ga12c2040f25d8e3a7b9e1c2024c618cb6>`
	#define :ref:`INFINITY<doxid-group__libccc__float_1ga956e2723d559858d08644ac99146e910>`
	#define :target:`IS_INF<doxid-group__libccc__float_1ga5ad637b8eb4aa29aa69bf5f82126cdac>`(X)
	#define :ref:`IS_INFINITY<doxid-group__libccc__float_1ga75b1c8ba2d9c38d0850b2aa25d4650df>`(X)
	#define :ref:`IS_NAN<doxid-group__libccc__float_1ga5f1a3a07bc95a87692963d4066380813>`(X)
	#define :ref:`NAN<doxid-group__libccc__float_1ga8abfcc76130f3f991d124dd22d7e69bc>`
	#define :target:`SAMPLE_NB<doxid-group__libccc__float_1ga5b146e6f66b3a7fc41dd699a157d0bb0>`
	#define :target:`c_f32_to_str<doxid-group__libccc__float_1gac43a49ddf7cab7afe57b9d44fafae818>`
	#define :target:`c_f32_to_strbin<doxid-group__libccc__float_1gaddbc58ca2aee3ab18b8c7e820603acf3>`
	#define :target:`c_f32_to_strdec<doxid-group__libccc__float_1ga4a39cad804e9019df7dca851accb05cb>`
	#define :target:`c_f32_to_strexp<doxid-group__libccc__float_1gae8d7b26998dba5b1e6fbc383d8e2e8fe>`
	#define :target:`c_f32_to_strhex<doxid-group__libccc__float_1ga441f38f6abe2c2a439ef21116a0d37d0>`
	#define :target:`c_f32_to_strsci<doxid-group__libccc__float_1ga3d1ae7591eefe82f1557c8f859f1ceac>`
	#define :target:`c_f64_to_str<doxid-group__libccc__float_1ga80dd53aaee1c830bd23494a7020fb1c5>`
	#define :target:`c_f64_to_strbin<doxid-group__libccc__float_1ga44939bc0492268324598a8ec990decd2>`
	#define :target:`c_f64_to_strdec<doxid-group__libccc__float_1ga772e3201418cd63aa59a2ae2eb4235da>`
	#define :target:`c_f64_to_strexp<doxid-group__libccc__float_1gad1f5b6d4fc9ea3bb2918674e21117428>`
	#define :target:`c_f64_to_strhex<doxid-group__libccc__float_1gaf2d4f4bd07931d70327f9d13bce44b61>`
	#define :target:`c_f64_to_strsci<doxid-group__libccc__float_1ga32c741fe5a2344ac4fb4c79110c1bb4b>`
	#define :target:`c_float_to_str<doxid-group__libccc__float_1gae7be7d6d7476e9353f594b506f557d49>`
	#define :target:`c_float_to_strbin<doxid-group__libccc__float_1gac3ddbf9e4756629647745361d2e27687>`
	#define :target:`c_float_to_strdec<doxid-group__libccc__float_1ga260b0337b7377eb7bf3ee67af7734ae3>`
	#define :target:`c_float_to_strexp<doxid-group__libccc__float_1gaa799c6f8ab0409efd3bf98c51d70518c>`
	#define :target:`c_float_to_strhex<doxid-group__libccc__float_1ga19c1f6d21f5efd419edfa543a071abda>`
	#define :target:`c_float_to_strsci<doxid-group__libccc__float_1gabd1ef89b08d0c75334dfbe73c9bf6acf>`
	#define :target:`c_str_to_f32<doxid-group__libccc__float_1ga3b0537824eed0b3b861d4a1a187e4776>`
	#define :target:`c_str_to_f64<doxid-group__libccc__float_1ga896eaaab83339f893d50ece6263c8f8f>`
	#define :target:`c_str_to_float<doxid-group__libccc__float_1gae091a2360b043ba15b5e20c6a32c6f9d>`
	#define :target:`c_strbin_to_f32<doxid-group__libccc__float_1ga0b21a8e72ad9957024a22a251a53896b>`
	#define :target:`c_strbin_to_f64<doxid-group__libccc__float_1ga8f6a19cc88d64822fd9e744049c197c7>`
	#define :target:`c_strbin_to_float<doxid-group__libccc__float_1ga15889a02d6d7eefd5a71626aaf06749e>`
	#define :target:`c_strdec_to_f32<doxid-group__libccc__float_1ga518b051db60a7b63521803c465268fdb>`
	#define :target:`c_strdec_to_f64<doxid-group__libccc__float_1gac2391c413545f43538cdd3dc8173a9f7>`
	#define :target:`c_strdec_to_float<doxid-group__libccc__float_1ga6000919867cdbd890335d850502dfbac>`
	#define :target:`c_strexp_to_f32<doxid-group__libccc__float_1ga1866d1bea04b059aae3e248bc6720312>`
	#define :target:`c_strexp_to_f64<doxid-group__libccc__float_1ga07e7f361f063b079c35bdd5484f385a7>`
	#define :target:`c_strexp_to_float<doxid-group__libccc__float_1gafbd93b0d4973284edd43b73742553836>`
	#define :target:`c_strhex_to_f32<doxid-group__libccc__float_1ga0fef7ef9da7fa7899e4e837dc016fbe3>`
	#define :target:`c_strhex_to_f64<doxid-group__libccc__float_1gab3b59dc73178d3f518afa699acc3fe69>`
	#define :target:`c_strhex_to_float<doxid-group__libccc__float_1gad31039fb1638f81d566d7fb4e5938326>`
	#define :target:`c_strsci_to_f32<doxid-group__libccc__float_1ga48073ffa54153c5f52de78625c06155f>`
	#define :target:`c_strsci_to_f64<doxid-group__libccc__float_1ga14960e02216dadba083d9ca31f643594>`
	#define :target:`c_strsci_to_float<doxid-group__libccc__float_1gaafe5e9bd77340938b45b3312b1a5b8c7>`

.. _details-group__libccc__float:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This header defines the floating-point number primitive types and functions.

Typedefs
--------

.. index:: pair: typedef; t_f32
.. _doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef float t_f32

The type for 32-bit 'single precision' IEEE-754 floating-point numbers.

.. index:: pair: typedef; t_f64
.. _doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef double t_f64

The type for 64-bit 'double precision' IEEE-754 floating-point numbers.

.. index:: pair: typedef; t_float
.. _doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef LIBCONFIG_TYPE_FLOAT t_float

The configurable-size floating-point number primitive type.

.. index:: pair: typedef; u_float_cast
.. _doxid-group__libccc__float_1gab086f30c0781d00400bbabc35acd9324:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef union :ref:`u_float_cast_<doxid-unionu__float__cast__>` u_float_cast

This union type is used in several math function implementations, to manipulate float bits directly with bitwise operators.

.. index:: pair: typedef; u_varfloat
.. _doxid-group__libccc__float_1gae531852f0f4695a3061dde0a6363e1dd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	typedef union :ref:`u_varfloat_<doxid-unionu__varfloat__>` u_varfloat

A union storing a floating-point number of any common size/precision.

These unions are used for certain difficult casting conditions. They are used in particular when casting an <stdarg.h> var_arg to the appropriate type in c_printf.

Global Functions
----------------

.. index:: pair: function; F32_ToString
.. _doxid-group__libccc__float_1gad285a552101998d9cfc6947b8c46c653:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* F32_ToString(:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` n, t_u8 precision)

Get the shortest string representation of the given 32-bit floating-point number (dec or exp), with 'precision' fractional digits.

.. index:: pair: function; F64_ToString
.. _doxid-group__libccc__float_1ga115c8d4b7b00be6e070789d4e70cb8d4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* F64_ToString(:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` n, t_u8 precision)

Get the shortest string representation of the given 64-bit floating-point number (dec or exp), with 'precision' fractional digits.

.. index:: pair: function; Float_ToString
.. _doxid-group__libccc__float_1ga87bde4addaacf45f38f59f8bef943a61:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* Float_ToString(:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` n, t_u8 precision)

Get the shortest string representation of the given floating-point number (dec or exp), with 'precision' fractional digits.

.. index:: pair: function; F32_ToString_Exp
.. _doxid-group__libccc__float_1gaca2fb8d966204b8201dffdf3f62f4341:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* F32_ToString_Exp(:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` n, t_u8 precision)

Get the string scientific notation of a 32-bit floating-point number, with 'precision' fractional digits.

.. index:: pair: function; F64_ToString_Exp
.. _doxid-group__libccc__float_1gae009d20a0fe47434c66b4fc38409aa2d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* F64_ToString_Exp(:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` n, t_u8 precision)

Get the string scientific notation of a 64-bit floating-point number, with 'precision' fractional digits.

.. index:: pair: function; Float_ToString_Exp
.. _doxid-group__libccc__float_1ga497200b202212a20de1ab032645ff226:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* Float_ToString_Exp(:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` n, t_u8 precision)

Get the string scientific notation of a floating-point number, with 'precision' fractional digits.

.. index:: pair: function; F32_ToString_Dec
.. _doxid-group__libccc__float_1ga3f049f04e53bc49c374551470b71b49e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* F32_ToString_Dec(:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` n, t_u8 precision)

Get the string decimal representation of a 32-bit floating-point number, with 'precision' fractional digits.

.. index:: pair: function; F64_ToString_Dec
.. _doxid-group__libccc__float_1gad911e6786d0dd0bb60af18930a911b19:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* F64_ToString_Dec(:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` n, t_u8 precision)

Get the string decimal representation of a 64-bit floating-point number, with 'precision' fractional digits.

.. index:: pair: function; Float_ToString_Dec
.. _doxid-group__libccc__float_1gaab728c5c49d0e4ed34b28c0dea3c8a10:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* Float_ToString_Dec(:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` n, t_u8 precision)

Get the string decimal representation of a floating-point number, with 'precision' fractional digits.

.. index:: pair: function; F32_ToString_Hex
.. _doxid-group__libccc__float_1ga6fc6e17184ab26df21a9dd27522cf7d2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* F32_ToString_Hex(:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` n, t_u8 precision)

Get the string hexadecimal representation of a 32-bit floating-point number, with 'precision' fractional digits (if 0, max precision)

.. index:: pair: function; F64_ToString_Hex
.. _doxid-group__libccc__float_1gaf25ba75ca79c425d7447cb7af730aa4d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* F64_ToString_Hex(:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` n, t_u8 precision)

Get the string hexadecimal representation of a 64-bit floating-point number, with 'precision' fractional digits (if 0, max precision)

.. index:: pair: function; Float_ToString_Hex
.. _doxid-group__libccc__float_1ga98802d3e8507d3ec38c08342553cdc0e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* Float_ToString_Hex(:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` n, t_u8 precision)

Get the string hexadecimal representation of a floating-point number, with 'precision' fractional digits (if 0, max precision)

.. index:: pair: function; F32_ToString_Bin
.. _doxid-group__libccc__float_1ga5d6f31b911f15179082f23dda906bb4d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* F32_ToString_Bin(:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` n, t_u8 precision)

Get the string binary representation of a 32-bit floating-point number, with 'precision' fractional digits (if 0, max precision)

.. index:: pair: function; F64_ToString_Bin
.. _doxid-group__libccc__float_1ga64e0f85dc01cc33acfdd301b4408b67c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* F64_ToString_Bin(:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` n, t_u8 precision)

Get the string binary representation of a 64-bit floating-point number, with 'precision' fractional digits (if 0, max precision)

.. index:: pair: function; Float_ToString_Bin
.. _doxid-group__libccc__float_1ga3b00540515f59af7586ce4695d561dfb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	char* Float_ToString_Bin(:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` n, t_u8 precision)

Get the string binary representation of a floating-point number, with 'precision' fractional digits (if 0, max precision)

.. index:: pair: function; F32_FromString
.. _doxid-group__libccc__float_1ga0be1e9638f033d075c4e5694d9191178:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` F32_FromString(char const* str)

Parse a 32-bit floating-point number from the given string (can be decimal/exponential/hexdecimal)

.. index:: pair: function; F64_FromString
.. _doxid-group__libccc__float_1ga0463f0ec8669cef3f4ef691a24036387:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` F64_FromString(char const* str)

Parse a 64-bit floating-point number from the given string (can be decimal/exponential/hexdecimal)

.. index:: pair: function; Float_FromString
.. _doxid-group__libccc__float_1gabcc2930d58a7d6b8eadccfe716ade69a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` Float_FromString(char const* str)

Parse a floating-point number from the given string (can be decimal/exponential/hexdecimal)

.. index:: pair: function; F32_FromString_Exp
.. _doxid-group__libccc__float_1ga0156271554be84ef2f58cbcd0000c7b2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` F32_FromString_Exp(char const* str)

Parse the scientific notation of a 32-bit floating-point number.

.. index:: pair: function; F64_FromString_Exp
.. _doxid-group__libccc__float_1ga782f27c0936218883d2a5d5a798d27d2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` F64_FromString_Exp(char const* str)

Parse the scientific notation of a 64-bit floating-point number.

.. index:: pair: function; Float_FromString_Exp
.. _doxid-group__libccc__float_1gac4792358fffb4a2e651930e8a6766c33:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` Float_FromString_Exp(char const* str)

Parse the scientific notation of a floating-point number.

.. index:: pair: function; F32_FromString_Dec
.. _doxid-group__libccc__float_1gab64782f5291512cec672686d51fdca5e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` F32_FromString_Dec(char const* str)

Parse the decimal representation of a 32-bit floating-point number.

.. index:: pair: function; F64_FromString_Dec
.. _doxid-group__libccc__float_1ga37435393a52545e5c59d82b5f96c0d8f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` F64_FromString_Dec(char const* str)

Parse the decimal representation of a 64-bit floating-point number.

.. index:: pair: function; Float_FromString_Dec
.. _doxid-group__libccc__float_1ga1b24e43778a287b27fb6571c0277e6ad:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` Float_FromString_Dec(char const* str)

Parse the decimal representation of a floating-point number.

.. index:: pair: function; F32_FromString_Hex
.. _doxid-group__libccc__float_1ga9156140d044787e16e47a90925f69cd7:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` F32_FromString_Hex(char const* str)

Parse the hexadecimal representation of a 32-bit floating-point number.

.. index:: pair: function; F64_FromString_Hex
.. _doxid-group__libccc__float_1ga6b55470671b8ef443ed1da5e4afb8c57:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` F64_FromString_Hex(char const* str)

Parse the hexadecimal representation of a 64-bit floating-point number.

.. index:: pair: function; Float_FromString_Hex
.. _doxid-group__libccc__float_1ga1a915a261ff324b5214314781458c1a1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` Float_FromString_Hex(char const* str)

Parse the hexadecimal representation of a floating-point number.

.. index:: pair: function; F32_FromString_Bin
.. _doxid-group__libccc__float_1ga5c352be5e5ff346eac2a7b04105de807:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_f32<doxid-group__libccc__float_1gab4ca326c12ad2a26dbfe81c3d798bcdf>` F32_FromString_Bin(char const* str)

Parse the binary representation of a 32-bit floating-point number.

.. index:: pair: function; F64_FromString_Bin
.. _doxid-group__libccc__float_1ga6dac270fe954a0226ac47466f9d98df1:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_f64<doxid-group__libccc__float_1gad103913585e225d474d7bd173154f4e8>` F64_FromString_Bin(char const* str)

Parse the binary representation of a 64-bit floating-point number.

.. index:: pair: function; Float_FromString_Bin
.. _doxid-group__libccc__float_1gaa4090cc6374aae80574f220d569c6213:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	:ref:`t_float<doxid-group__libccc__float_1ga062b5f7ac5af1921a0d50e5b59f7a496>` Float_FromString_Bin(char const* str)

Parse the binary representation of a floating-point number.

Macros
------

.. index:: pair: define; F128_EXPONENT
.. _doxid-group__libccc__float_1gadc9b1c869833b31fea877ade10d6239c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F128_EXPONENT

A 128-bit floating-point number's exponent bit region (bitmask)

.. index:: pair: define; F128_EXPONENT_BIAS
.. _doxid-group__libccc__float_1ga81d2a5ce44c433a2ceecefca4a2de08b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F128_EXPONENT_BIAS

A 128-bit floating-point number's exponent bias offset.

.. index:: pair: define; F128_EXPONENT_BITS
.. _doxid-group__libccc__float_1gad7a0f59b4868523a6fedb902e1504cfd:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F128_EXPONENT_BITS

A 128-bit floating-point number's amount of bits dedicated to the exponent.

.. index:: pair: define; F128_EXPONENT_ZERO
.. _doxid-group__libccc__float_1ga91f7727aca5c556c5f0a365a1bdb721a:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F128_EXPONENT_ZERO

A 128-bit floating-point number's 0-exponent value, accounting for bias (bitmask)

.. index:: pair: define; F128_INIT_VALUE
.. _doxid-group__libccc__float_1ga7f6fd41f1f033300cba702f96c4d2d4b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F128_INIT_VALUE

A 128-bit floating-point number's value if all bits are zero.

.. index:: pair: define; F128_MANTISSA
.. _doxid-group__libccc__float_1ga7bb56169aeb699ceed610fbfa3944291:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F128_MANTISSA

A 128-bit floating-point number's mantissa bit region (bitmask)

.. index:: pair: define; F128_MANTISSA_BITS
.. _doxid-group__libccc__float_1ga2a5e09a9be518c66810b9d790acea175:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F128_MANTISSA_BITS

A 128-bit floating-point number's amount of bits dedicated to the mantissa.

.. index:: pair: define; F128_MANTISSA_SIGNED
.. _doxid-group__libccc__float_1gae3e8cfada14735b3e598e639359843cc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F128_MANTISSA_SIGNED

A 128-bit floating-point number's mantissa and sign bit regions (bitmask)

.. index:: pair: define; F128_SIGNED
.. _doxid-group__libccc__float_1gad2585244df8cc4a2417d3616baa1cc7c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F128_SIGNED

A 128-bit floating-point number's sign bit (bitmask)

.. index:: pair: define; F32_EXPONENT
.. _doxid-group__libccc__float_1ga45455f08229e3030c23cf964b6dd21af:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F32_EXPONENT

A 32-bit floating-point number's exponent bit region (bitmask)

.. index:: pair: define; F32_EXPONENT_BIAS
.. _doxid-group__libccc__float_1gaff4f94f02402a07e84f3d4604e47265d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F32_EXPONENT_BIAS

A 32-bit floating-point number's exponent bias offset.

.. index:: pair: define; F32_EXPONENT_BITS
.. _doxid-group__libccc__float_1ga5845049b2216118b5df6bef29a6da7fb:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F32_EXPONENT_BITS

A 32-bit floating-point number's amount of bits dedicated to the exponent.

.. index:: pair: define; F32_EXPONENT_ZERO
.. _doxid-group__libccc__float_1ga459ccfba917ec2fbf69a9e20d064a1b4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F32_EXPONENT_ZERO

A 32-bit floating-point number's 0-exponent value, accounting for bias (bitmask)

.. index:: pair: define; F32_INIT_VALUE
.. _doxid-group__libccc__float_1gac7093f0da3fd49fefdc63ca99f0ef506:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F32_INIT_VALUE

A 32-bit floating-point number's value if all bits are zero.

.. index:: pair: define; F32_MANTISSA
.. _doxid-group__libccc__float_1ga84c366a82d97e2694c8c060a00605458:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F32_MANTISSA

A 32-bit floating-point number's mantissa bit region (bitmask)

.. index:: pair: define; F32_MANTISSA_BITS
.. _doxid-group__libccc__float_1gafc21584309956692a5a5286d056e9650:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F32_MANTISSA_BITS

A 32-bit floating-point number's amount of bits dedicated to the mantissa.

.. index:: pair: define; F32_MANTISSA_SIGNED
.. _doxid-group__libccc__float_1gae76962643a878de58c4cd2248dd43b7d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F32_MANTISSA_SIGNED

A 32-bit floating-point number's mantissa and sign bit regions (bitmask)

.. index:: pair: define; F32_SIGNED
.. _doxid-group__libccc__float_1gab68073391b4d1885aed3ef5f97a778ee:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F32_SIGNED

A 32-bit floating-point number's sign bit (bitmask)

.. index:: pair: define; F64_EXPONENT
.. _doxid-group__libccc__float_1gab40d0a715ec4b6ce1a5cf26cf8499705:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F64_EXPONENT

A 64-bit floating-point number's exponent bit region (bitmask)

.. index:: pair: define; F64_EXPONENT_BIAS
.. _doxid-group__libccc__float_1ga59da18fad691074444fe07da93f07bbf:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F64_EXPONENT_BIAS

A 64-bit floating-point number's exponent bias offset.

.. index:: pair: define; F64_EXPONENT_BITS
.. _doxid-group__libccc__float_1ga654d00f825520eabd83f0f4c09071b97:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F64_EXPONENT_BITS

A 64-bit floating-point number's amount of bits dedicated to the exponent.

.. index:: pair: define; F64_EXPONENT_ZERO
.. _doxid-group__libccc__float_1gaee4aac42f0dbefe36ecaa8db3caccf79:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F64_EXPONENT_ZERO

A 64-bit floating-point number's 0-exponent value, accounting for bias (bitmask)

.. index:: pair: define; F64_INIT_VALUE
.. _doxid-group__libccc__float_1gac1356252683f2585dc62bd892194c39c:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F64_INIT_VALUE

A 64-bit floating-point number's value if all bits are zero.

.. index:: pair: define; F64_MANTISSA
.. _doxid-group__libccc__float_1gaa46e75d8630c52a727b9c2c81087ebe2:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F64_MANTISSA

A 64-bit floating-point number's mantissa bit region (bitmask)

.. index:: pair: define; F64_MANTISSA_BITS
.. _doxid-group__libccc__float_1ga7d97beb92dd86d6bcaef34f8ef6adc64:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F64_MANTISSA_BITS

A 64-bit floating-point number's amount of bits dedicated to the mantissa.

.. index:: pair: define; F64_MANTISSA_SIGNED
.. _doxid-group__libccc__float_1ga91f7fb5fab1a39ac561f6ca8684c1aa4:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F64_MANTISSA_SIGNED

A 64-bit floating-point number's mantissa and sign bit regions (bitmask)

.. index:: pair: define; F64_SIGNED
.. _doxid-group__libccc__float_1gaac4617a7c49336b2819f5e12d071d863:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F64_SIGNED

A 64-bit floating-point number's sign bit (bitmask)

.. index:: pair: define; F80_EXPONENT
.. _doxid-group__libccc__float_1gacdcb853bc15209e5072c4213a367e503:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F80_EXPONENT

A 80-bit floating-point number's exponent bit region (bitmask)

.. index:: pair: define; F80_EXPONENT_BIAS
.. _doxid-group__libccc__float_1ga67cef136ae4751d4b1e2e34fa49ddf4d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F80_EXPONENT_BIAS

A 80-bit floating-point number's exponent bias offset.

.. index:: pair: define; F80_EXPONENT_BITS
.. _doxid-group__libccc__float_1gad55bcdeae34b3e526b102e0284a4bb58:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F80_EXPONENT_BITS

A 80-bit floating-point number's amount of bits dedicated to the exponent.

.. index:: pair: define; F80_EXPONENT_ZERO
.. _doxid-group__libccc__float_1ga28a155e3fdbe71a9843ce02d1c06402b:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F80_EXPONENT_ZERO

A 80-bit floating-point number's 0-exponent value, accounting for bias (bitmask)

.. index:: pair: define; F80_INIT_VALUE
.. _doxid-group__libccc__float_1ga6362eb2db4233ca34e7a73e2ead58a60:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F80_INIT_VALUE

A 80-bit floating-point number's value if all bits are zero.

.. index:: pair: define; F80_MANTISSA
.. _doxid-group__libccc__float_1ga06cd90e1b5b74385e88ac419f04e989e:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F80_MANTISSA

A 80-bit floating-point number's mantissa bit region (bitmask)

.. index:: pair: define; F80_MANTISSA_BITS
.. _doxid-group__libccc__float_1ga0447bd3864f694362db253d6c069260d:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F80_MANTISSA_BITS

A 80-bit floating-point number's amount of bits dedicated to the mantissa.

.. index:: pair: define; F80_MANTISSA_SIGNED
.. _doxid-group__libccc__float_1ga3ac651588bba97e6ef288d84ec80bdae:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F80_MANTISSA_SIGNED

A 80-bit floating-point number's mantissa and sign bit regions (bitmask)

.. index:: pair: define; F80_SIGNED
.. _doxid-group__libccc__float_1ga6c3805905f3280747ad499500733141f:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define F80_SIGNED

A 80-bit floating-point number's sign bit (bitmask)

.. index:: pair: define; FLOAT_BIAS
.. _doxid-group__libccc__float_1gaa54c9c63358c14cd4837e092f541bdac:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define FLOAT_BIAS

This very small float is typically used to compare two float values. Floating point equality checks aren't the most dependable kind of operation, so it's often better to do (ABS(x - y) <= FLOAT_BIAS) to check for equality.

.. index:: pair: define; FLOAT_THRESHOLD_HUGE
.. _doxid-group__libccc__float_1ga381da602a823f0ad88c57d4c6a127368:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define FLOAT_THRESHOLD_HUGE

If (value >= FLOAT_THRESHOLD_HUGE), :ref:`Float_ToString() <doxid-group__libccc__float_1ga87bde4addaacf45f38f59f8bef943a61>` functions print in scientific notation.

.. index:: pair: define; FLOAT_THRESHOLD_TINY
.. _doxid-group__libccc__float_1ga5ed20a03af8dfc3ef1fb2df54e2ebe89:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define FLOAT_THRESHOLD_TINY

If (value <= FLOAT_THRESHOLD_TINY), :ref:`Float_ToString() <doxid-group__libccc__float_1ga87bde4addaacf45f38f59f8bef943a61>` functions print in scientific notation.

.. index:: pair: define; INFINITY
.. _doxid-group__libccc__float_1ga956e2723d559858d08644ac99146e910:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define INFINITY

Define the floating-point infinity value: use -INFINITY for negative inf.

.. index:: pair: define; IS_INFINITY
.. _doxid-group__libccc__float_1ga75b1c8ba2d9c38d0850b2aa25d4650df:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define IS_INFINITY(X)

Checks if the given 'x' is either +INFINITY or -INFINITY.

.. index:: pair: define; IS_NAN
.. _doxid-group__libccc__float_1ga5f1a3a07bc95a87692963d4066380813:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define IS_NAN(X)

Checks if the given 'x' has a "not a number" value.

.. index:: pair: define; NAN
.. _doxid-group__libccc__float_1ga8abfcc76130f3f991d124dd22d7e69bc:

.. ref-code-block:: cpp
	:class: doxyrest-title-code-block

	#define NAN

Define the floating-point "not a number" value.

