name: CI - Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

defaults:
  run:
    shell: bash

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        compiler: [gcc, clang]

    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
    - uses: actions/checkout@v2



    - name: Setup (Ubuntu)
      if: ${{ (matrix.os == 'ubuntu-latest') }}
      run: |
        echo "CC=${{matrix.compiler}}" >> $GITHUB_ENV

    - name: Setup (MacOS)
      if: ${{ (matrix.os == 'macOS-latest') }}
      run: |
        echo "CC=${{matrix.compiler}}" >> $GITHUB_ENV

    - name: Setup (Windows, clang)
      if: ${{ (matrix.os == 'windows-latest') && (matrix.compiler == 'clang') }}
      run: |
        echo "CC=${{matrix.compiler}}" >> $GITHUB_ENV

    - name: Setup (Windows, mingw)
      if: ${{ (matrix.os == 'windows-latest') && (matrix.compiler == 'gcc') }}
      run: |
        echo "CC=" >> $GITHUB_ENV
        echo "PATH=$PATH:C:\msys64\mingw64\bin" >> $GITHUB_ENV



    - name: Build libccc (with ${{matrix.compiler}}, for ${{matrix.os}})
      run: make build-release CC=$CC

    - name: Build libccc test suite (with ${{matrix.compiler}}, for ${{matrix.os}})
      run: make build-tests-release CC=$CC



    - name: Upload build binary artifacts
      uses: actions/upload-artifact@v2
      with:
        name: libccc-build_${{matrix.os}}_${{matrix.compiler}}
        path: ./libccc.*

    - name: Upload tests binary artifacts
      uses: actions/upload-artifact@v2
      with:
        name: libccc-tests_${{matrix.os}}_${{matrix.compiler}}
        path: ./libccc-test*
