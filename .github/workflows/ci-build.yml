name: CI - Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

defaults:
  run:
    shell: bash

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        compiler: [gcc, clang]

    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
    - uses: actions/checkout@v2



    - name: Setup (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: echo "Nothing to do"

    - name: Setup (MacOS)
      if: matrix.os == 'macOS-latest'
      run: echo "Nothing to do"

    - name: Setup (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        echo "PATH=$PATH:C:\msys64\mingw64\bin" >> $GITHUB_ENV
        alias gcc='x86_64-w64-mingw32-gcc'



    - name: Build libccc (with ${{matrix.compiler}}, for ${{matrix.os}})
      run: make build-release CC=${{matrix.compiler}}

    - name: Build libccc test suite (with ${{matrix.compiler}}, for ${{matrix.os}})
      run: make build-tests-release CC=${{matrix.compiler}}



    - name: Upload build binary artifacts
      uses: actions/upload-artifact@v2
      with:
        name: libccc-build_${{matrix.os}}_${{matrix.compiler}}
        path: ./libccc.*

    - name: Upload tests binary artifacts
      uses: actions/upload-artifact@v2
      with:
        name: libccc-tests_${{matrix.os}}_${{matrix.compiler}}
        path: ./libccc-test
